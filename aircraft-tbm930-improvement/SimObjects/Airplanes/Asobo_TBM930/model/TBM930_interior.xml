<?xml version="1.0" encoding="utf-8"?>
<ModelInfo>
    <LODS>
        <!-- Highest LOD -->
        <!-- minimum display size in % (should be bounding sphere vertical screen size, sphere will often be slightly larger than you expect) -->
        <!-- default minSize is 0 -->
        <LOD minSize="150" ModelFile="TBM930_interior_LOD00.gltf"/>
        <LOD minSize="110" ModelFile="TBM930_interior_LOD01.gltf"/>
        <LOD minSize="75" ModelFile="TBM930_interior_LOD02.gltf"/>
        <LOD minSize="40" ModelFile="TBM930_interior_LOD03.gltf"/>
        <LOD minSize="6.24" ModelFile="TBM930_interior_LOD04.gltf"/>
        <!--LOD minSize="5" ModelFile="TBM930_interior_LOD05.gltf"/-->
        <LOD minSize="1" ModelFile="TBM930_interior_LOD06.gltf"/>
    </LODS>
    <Behaviors>
        <!-- Includes ###################################### -->
        <Include ModelBehaviorFile="Asobo\Common.xml"/>
        <Include ModelBehaviorFile="Asobo\GlassCockpit\AS3000.xml"/>
        <Include ModelBehaviorFile="Asobo\GlassCockpit\AS580.xml"/>
        <Include ModelBehaviorFile="TBM930_Templates.xml"/>
        <!-- ############################################### -->

        <Component ID="MISC">
            <UseInputEvent ID="PROCEDURE">
                <PROCEDURE_ID>AUTOSTART</PROCEDURE_ID>
                <ON_AUTOSTART>
                    (&gt;B:ELECTRICAL_Crash_Lever_Up)
                    (&gt;B:ELECTRICAL_Battery_1_Battery)
                    (&gt;B:ELECTRICAL_Alternator_1_Main)
                    (&gt;B:ENGINE_Ignition_1_Auto)
                    (&gt;B:ENGINE_Starter_1_On)
                    (&gt;B:ENGINE_Throttle_Idle)
                    (&gt;B:FUEL_Pump_1_Auto)
                    (&gt;B:FUEL_Selector_1_Left)
                </ON_AUTOSTART>
                <ON_AUTOSTOP>
                    (&gt;B:ELECTRICAL_Battery_1_Off)
                    (&gt;B:ELECTRICAL_Alternator_1_Off)
                    (&gt;B:ENGINE_Throttle_Cutoff)
                    (&gt;B:ENGINE_Starter_1_Off)
                    (&gt;B:ENGINE_Ignition_1_Off)
                    (&gt;B:FUEL_Pump_1_Off)
                    (&gt;B:FUEL_Selector_1_Off)
                </ON_AUTOSTOP>
            </UseInputEvent>
        </Component>

        <!-- INSTRUMENT ################################# -->
        <Component ID="INSTRUMENT">
            <UseTemplate Name="ASOBO_INSTRUMENT_Dial_Compass_Template">
                <ANIM_NAME>cylinder_compass</ANIM_NAME>
                <NODE_ID>cylinder_compass</NODE_ID>
            </UseTemplate>
            <CameraTitle>Pilot</CameraTitle>
        </Component>

        <!-- HANDLING ################################### -->
        <Component ID="HANDLING_Yokes">
            <Component ID="HANDLING_Yoke_Anim">
                <UseTemplate Name="ASOBO_HANDLING_Yoke_Template">
                    <ANIM_NAME_YOKE_X>lever_stick_l_r</ANIM_NAME_YOKE_X>
                    <ANIM_NAME_YOKE_Y>lever_stick_fore_aft</ANIM_NAME_YOKE_Y>
                    <NODE_ID>yoke_left</NODE_ID>
                    <AP_CAN_DRIVE_ANIMATION>True</AP_CAN_DRIVE_ANIMATION>
                </UseTemplate>
            </Component>
            <Component ID="HANDLING_Yoke_Stick_Left">
                <UseTemplate Name="ASOBO_HANDLING_Yoke_Hideable_Template">
                    <NODE_ID>yoke_left</NODE_ID>
                    <YOKE_HIDER_NODE_ID>YOKE_LEFT_VISIBILITY</YOKE_HIDER_NODE_ID>
                    <YOKE_NODE_ID>yoke_left</YOKE_NODE_ID>
                    <ANIM_NAME_YOKE_X>lever_stick_l_r</ANIM_NAME_YOKE_X>
                    <ANIM_NAME_YOKE_Y>lever_stick_fore_aft</ANIM_NAME_YOKE_Y>
                    <AP_CAN_DRIVE_ANIMATION>True</AP_CAN_DRIVE_ANIMATION>
                    <ID>1</ID>
                </UseTemplate>
                <UseTemplate Name="ASOBO_HANDLING_Push_Timer_Template">
                    <NODE_ID>YOKE_PUSH_TIMER</NODE_ID>
                    <ANIM_NAME>YOKE_PUSH_TIMER</ANIM_NAME>
                </UseTemplate>
                <UseTemplate Name="ASOBO_HANDLING_Push_StormClear_Template">
                    <NODE_ID>YOKE_PUSH_STORM_CLR_LEFT</NODE_ID>
                    <ANIM_NAME>YOKE_PUSH_STORM_CLR_LEFT</ANIM_NAME>
                </UseTemplate>
                <UseTemplate Name="ASOBO_HANDLING_Push_CWS_Template">
                    <NODE_ID>YOKE_PUSH_CWS_LEFT</NODE_ID>
                    <ANIM_NAME>YOKE_PUSH_CWS_LEFT</ANIM_NAME>
                </UseTemplate>
                <UseTemplate Name="ASOBO_HANDLING_Push_Ident_Template">
                    <NODE_ID>YOKE_PUSH_IDENT_LEFT</NODE_ID>
                    <ANIM_NAME>YOKE_PUSH_IDENT_LEFT</ANIM_NAME>
                </UseTemplate>
                <UseTemplate Name="ASOBO_HANDLING_Joystick_YawPitch_Template">
                    <ID>1</ID>
                    <NODE_ID>YOKE_L_PUSH_NOSE_L_R</NODE_ID>
                    <ANIM_NAME_L_R>YOKE_L_PUSH_NOSE_L_R</ANIM_NAME_L_R>
                    <ANIM_NAME_DN_UP>YOKE_L_PUSH_NOSE_DN_UP</ANIM_NAME_DN_UP>
                </UseTemplate>
                <UseTemplate Name="ASOBO_HANDLING_Push_AP_Trim_Disc_Template">
                    <NODE_ID>YOKE_PUSH_AP_TRIM_DISC_LEFT</NODE_ID>
                    <ANIM_NAME>YOKE_PUSH_AP_TRIM_DISC_LEFT</ANIM_NAME>
                </UseTemplate>
                <UseTemplate Name="ASOBO_HANDLING_Push_Swap_Template">
                    <NODE_ID>YOKE_PUSH_BACK_R_LEFT</NODE_ID>
                    <ANIM_NAME>YOKE_PUSH_BACK_R_LEFT</ANIM_NAME>
                </UseTemplate>
            </Component>

            <Component ID="HANDLING_Yoke_Stick_Right">
                <UseTemplate Name="ASOBO_HANDLING_Yoke_Hideable_Template">
                    <NODE_ID>yoke_right</NODE_ID>
                    <YOKE_HIDER_NODE_ID>YOKE_RIGHT_VISIBILITY</YOKE_HIDER_NODE_ID>
                    <YOKE_NODE_ID>yoke_right</YOKE_NODE_ID>
                    <ID>2</ID>
                    <ONLY_HIDEABLE/>
                </UseTemplate>
                <UseTemplate Name="ASOBO_HANDLING_Push_Timer_Template">
                    <NODE_ID>YOKE_PUSH_TIMER_RIGHT</NODE_ID>
                    <ANIM_NAME>YOKE_PUSH_TIMER_RIGHT</ANIM_NAME>
                </UseTemplate>
                <UseTemplate Name="ASOBO_HANDLING_Push_StormClear_Template">
                    <NODE_ID>YOKE_PUSH_STORM_CLR_RIGHT</NODE_ID>
                    <ANIM_NAME>YOKE_PUSH_STORM_CLR_RIGHT</ANIM_NAME>
                </UseTemplate>
                <UseTemplate Name="ASOBO_HANDLING_Push_CWS_Template">
                    <NODE_ID>YOKE_PUSH_CWS_RIGHT</NODE_ID>
                    <ANIM_NAME>YOKE_PUSH_CWS_RIGHT</ANIM_NAME>
                </UseTemplate>
                <UseTemplate Name="ASOBO_HANDLING_Push_Ident_Template">
                    <NODE_ID>YOKE_PUSH_IDENT_RIGHT</NODE_ID>
                    <ANIM_NAME>YOKE_PUSH_IDENT_RIGHT</ANIM_NAME>
                </UseTemplate>
                <UseTemplate Name="ASOBO_HANDLING_Joystick_YawPitch_Template">
                    <ID>2</ID>
                    <NODE_ID>YOKE_PUSH_NOSE_RIGHT</NODE_ID>
                    <ANIM_NAME_L_R>YOKE_R_PUSH_NOSE_L_R</ANIM_NAME_L_R>
                    <ANIM_NAME_DN_UP>YOKE_R_PUSH_NOSE_DN_UP</ANIM_NAME_DN_UP>
                </UseTemplate>
                <UseTemplate Name="ASOBO_HANDLING_Push_AP_Trim_Disc_Template">
                    <NODE_ID>YOKE_PUSH_AP_TRIM_DISC_RIGHT</NODE_ID>
                    <ANIM_NAME>YOKE_PUSH_AP_TRIM_DISC_RIGHT</ANIM_NAME>
                </UseTemplate>
                <UseTemplate Name="ASOBO_HANDLING_Push_Swap_Template">
                    <NODE_ID>YOKE_PUSH_BACK_R_RIGHT</NODE_ID>
                    <ANIM_NAME>YOKE_PUSH_BACK_R_RIGHT</ANIM_NAME>
                </UseTemplate>
            </Component>
            <CameraTitle>Yokes</CameraTitle>
        </Component>

        <Component ID="HANDLING_Pedestal">
            <UseTemplate Name="ASOBO_HANDLING_RudderPedals_Template">
                <RUDDERPEDALS_TYPE>MIXED</RUDDERPEDALS_TYPE>
                <NODE_ID_L_BRAKE_1>lever_pedals_Brake_1_1</NODE_ID_L_BRAKE_1>
                <NODE_ID_L_BRAKE_2>lever_pedals_Brake_1_2</NODE_ID_L_BRAKE_2>
                <NODE_ID_R_BRAKE_1>lever_pedals_Brake_2_1</NODE_ID_R_BRAKE_1>
                <NODE_ID_R_BRAKE_2>lever_pedals_Brake_2_2</NODE_ID_R_BRAKE_2>
                <NODE_ID_L_RUDDER>lever_pedals_1</NODE_ID_L_RUDDER>
                <NODE_ID_R_RUDDER>lever_pedals_2</NODE_ID_R_RUDDER>
                <NODE_ID>lever_pedals_1</NODE_ID>
                <ANIM_NAME>HANDLING_RudderPedals_L_R</ANIM_NAME>
            </UseTemplate>
            <UseTemplate Name="ASOBO_HANDLING_RudderPedals_Template">
                <ANIM_NAME>HANDLING_RudderPedals_l_r</ANIM_NAME>
                <ID>2</ID>
                <NODE_ID>lever_pedals_2</NODE_ID>
            </UseTemplate>
            <UseTemplate Name="ASOBO_HANDLING_Lever_Flaps_Template">
                <USE_TRAJECTORY_DRAG_MODE>True</USE_TRAJECTORY_DRAG_MODE>
                <ANIM_NAME>lever_flap</ANIM_NAME>
                <NODE_ID>hitbox_lever_flaps</NODE_ID>
                <ANIMREF_ID>0</ANIMREF_ID>
                <ANIMTIP_0>TT:COCKPIT.TOOLTIPS.FLAPS_LEVER_UP</ANIMTIP_0>
                <ANIMTIP_0_ON_PERCENT>0</ANIMTIP_0_ON_PERCENT>
                <ANIMTIP_1>TT:COCKPIT.TOOLTIPS.FLAPS_LEVER_TO</ANIMTIP_1>
                <ANIMTIP_1_ON_PERCENT>0.5</ANIMTIP_1_ON_PERCENT>
                <ANIMTIP_2>TT:COCKPIT.TOOLTIPS.FLAPS_LEVER_LDG</ANIMTIP_2>
                <ANIMTIP_2_ON_PERCENT>1</ANIMTIP_2_ON_PERCENT>
            </UseTemplate>
            <UseTemplate Name="ASOBO_HANDLING_Wheel_ElevatorTrim_Template">
                <ANIM_NAME>lever_trim_elevator</ANIM_NAME>
                <NODE_ID>lever_trim_elevator</NODE_ID>
                <REPEAT_ANIM>3</REPEAT_ANIM>
                <INCREMENT>15</INCREMENT>
            </UseTemplate>
            <UseTemplate Name="ASOBO_HANDLING_Switch_AileronTrim_Template">
                <NODE_ID>PUSH_AIL_TRIM</NODE_ID>
                <ANIM_NAME>PUSH_AIL_TRIM</ANIM_NAME>
                <ANIMREF_ID>0</ANIMREF_ID>
                <ANIMCURSOR_DIR>1</ANIMCURSOR_DIR>
                <ANIMCURSOR_MIN>-0.5</ANIMCURSOR_MIN>
                <ANIMCURSOR_MAX>1.5</ANIMCURSOR_MAX>
                <USE_DEFAULT_VARIABLE_SPEED_TRIM>True</USE_DEFAULT_VARIABLE_SPEED_TRIM>
            </UseTemplate>
            <CameraTitle>Pedestal</CameraTitle>
        </Component>

        <Component ID="HANDLING_Overhead">
            <Component ID="HANDLING_Switch_AutopilotTrim" Node="aptrims_switch">
                <Parameters Type="Override">
                    <BTN_ID>AP_Trim</BTN_ID>
                    <POS_ON>0</POS_ON>
                    <POS_AP_OFF>1</POS_AP_OFF>
                    <POS_OFF>2</POS_OFF>
                    <NUM_STATES>3</NUM_STATES>
                    <TT_DESCRIPTION_ID>@TT_Package.HANDLING_SWITCH_APTRIMS_ACTION</TT_DESCRIPTION_ID>
                    <TOOLTIP_TITLE>@TT_Package.HANDLING_SWITCH_APTRIMS_TITLE</TOOLTIP_TITLE>
                </Parameters>
                <UseInputEvent ID="HANDLING">
                    <SET_STATE_#POS_ON#>(A:AUTOPILOT DISENGAGED, Bool) if{ (&gt;K:AUTOPILOT_DISENGAGE_TOGGLE) }</SET_STATE_#POS_ON#>
                    <SET_STATE_#POS_AP_OFF#>
                        (A:AUTOPILOT DISENGAGED, Bool) ! if{ (&gt;K:AUTOPILOT_DISENGAGE_TOGGLE) }
                        (A:RUDDER TRIM DISABLED, Bool) if{ 0 (&gt;K:RUDDER_TRIM_DISABLED_SET) }
                        (A:AILERON TRIM DISABLED, Bool) if{ 0 (&gt;K:AILERON_TRIM_DISABLED_SET) }
                    </SET_STATE_#POS_AP_OFF#>
                    <SET_STATE_#POS_OFF#>
                        (A:AUTOPILOT DISENGAGED, Bool) ! if{ (&gt;K:AUTOPILOT_DISENGAGE_TOGGLE) }
                        (A:RUDDER TRIM DISABLED, Bool) ! if{ 1 (&gt;K:RUDDER_TRIM_DISABLED_SET) }
                        (A:AILERON TRIM DISABLED, Bool) ! if{ 1 (&gt;K:AILERON_TRIM_DISABLED_SET) }
                    </SET_STATE_#POS_OFF#>
                    <STR_STATE_#POS_ON#>On</STR_STATE_#POS_ON#>
                    <STR_STATE_#POS_AP_OFF#>AP_Off</STR_STATE_#POS_AP_OFF#>
                    <STR_STATE_#POS_OFF#>Off</STR_STATE_#POS_OFF#>
                    <TT_VALUE_#POS_ON#>@TT_Package.GT_STATE_ON</TT_VALUE_#POS_ON#>
                    <TT_VALUE_#POS_AP_OFF#>@TT_Package.GT_STATE_AP_OFF</TT_VALUE_#POS_AP_OFF#>
                    <TT_VALUE_#POS_OFF#>@TT_Package.GT_STATE_OFF</TT_VALUE_#POS_OFF#>
                    <GET_STATE_EXTERNAL>(A:AUTOPILOT DISENGAGED, Bool) sp0 (A:RUDDER TRIM DISABLED, Bool) (A:AILERON TRIM DISABLED, Bool) and sp1</GET_STATE_EXTERNAL>
                    <ENUM_VAL_TO_POS_EXTERNAL>l0 if{ #POS_OFF# #POS_AP_OFF# l1 ? sp2 } els{ #POS_ON# sp2 g2 } :2 l2</ENUM_VAL_TO_POS_EXTERNAL>
                    <SIMVAR_TO_WATCH_0>AUTOPILOT DISENGAGED</SIMVAR_TO_WATCH_0>
                    <SIMVAR_TO_WATCH_1>RUDDER TRIM DISABLED</SIMVAR_TO_WATCH_1>
                    <SIMVAR_TO_WATCH_2>AILERON TRIM DISABLED</SIMVAR_TO_WATCH_2>
                </UseInputEvent>
                <UseTemplate Name="ASOBO_GT_Switch_XStates">
                    <TOOLTIP_ENTRY_0>HANDLING_#BTN_ID#</TOOLTIP_ENTRY_0>
                    <PART_ID>HANDLING_Switch_AutopilotTrim</PART_ID>
                    <ANIM_NAME>aptrims_switch</ANIM_NAME>
                    <WWISE_EVENT>aptrims_switch</WWISE_EVENT> 
                    <CODE_POS_#POS_ON#>(&gt;B:HANDLING_#BTN_ID#_On)</CODE_POS_#POS_ON#>
                    <CODE_POS_#POS_AP_OFF#>(&gt;B:HANDLING_#BTN_ID#_AP_Off)</CODE_POS_#POS_AP_OFF#>
                    <CODE_POS_#POS_OFF#>(&gt;B:HANDLING_#BTN_ID#_Off)</CODE_POS_#POS_OFF#>
                    <STATE#POS_ON#_TEST>(B:HANDLING_#BTN_ID#) #POS_ON# ==</STATE#POS_ON#_TEST>
                    <STATE#POS_AP_OFF#_TEST>(B:HANDLING_#BTN_ID#) #POS_AP_OFF# ==</STATE#POS_AP_OFF#_TEST>
                    <STATE#POS_OFF#_TEST>(B:HANDLING_#BTN_ID#) #POS_OFF# ==</STATE#POS_OFF#_TEST>
                </UseTemplate>
            </Component>
            <CameraTitle>Overhead</CameraTitle>
        </Component>

        <!-- LANDING_GEAR ############################### -->
        <Component ID="LANDING_GEAR">
            <UseTemplate Name="ASOBO_LANDING_GEAR_Switch_ParkingBrake_Template">
                <NODE_ID>parkbrake_knob_l</NODE_ID>
                <ANIM_NAME>parkbrake_knob_l</ANIM_NAME>
                <ANIM_SIMVAR_SCALE>100</ANIM_SIMVAR_SCALE>
                <TT_ICON>ROTATE</TT_ICON>
            </UseTemplate>
            <Component ID="LANDING_GEAR_Lever" Node="landing_gear_lever">
                <UseTemplate Name="ASOBO_LANDING_GEAR_Lever_Gear_Template">
                    <ANIM_NAME>landing_gear_lever</ANIM_NAME>
                    <NODE_ID>hitbox_Landing_Gear_Lever</NODE_ID>
                    <LIGHT_NODE_ID>LANDING_GEAR_LEVER_LIGHT</LIGHT_NODE_ID>
                    <EMISSIVE_CODE>
                        (B:LANDING_GEAR_Light_Test, Bool) if{
                            (L:XMLVAR_LandingGearLightBlink) sp0 g1
                        } els{
                            (A:GEAR HANDLE POSITION, Bool) 0 == (A:SIM ON GROUND, Bool) and if{ (L:XMLVAR_LandingGearLightBlink) sp0 g1 }
                            (A:GEAR RIGHT POSITION, Percent) 0 &gt; (A:GEAR RIGHT POSITION, Percent) 100 &lt; and
                            (A:GEAR CENTER POSITION, Percent) 0 &gt; (A:GEAR CENTER POSITION, Percent) 100 &lt; and or
                            (A:GEAR LEFT POSITION, Percent) 0 &gt; (A:GEAR LEFT POSITION, Percent) 100 &lt; and or (L:XMLVAR_LandingGearLightBlink) * sp0
                        } :1 l0
                    </EMISSIVE_CODE>
                </UseTemplate>
            </Component>
            <Component ID="LANDING_GEAR_Lights">
                <Parameters Type="Override">
                    <EMISSIVE_CODE>
                        0.1 1 (B:LIGHTING_Dimmer_light, Bool) ? sp0
                        (B:LANDING_GEAR_Check_Down, Bool) (B:LANDING_GEAR_Light_Test, Bool) or if{
                            l0 0 (L:XMLVAR_LandingGearLightTesting) ?
                        } els{
                            l0 0 (A:GEAR LEFT POSITION, Percent) 100 == ?
                        }
                    </EMISSIVE_CODE>
                </Parameters>
                <Component ID="LANDING_GEAR_LightL" Node="landing_gear_light_L">
                    <UseTemplate Name="ASOBO_GT_Emissive_Gauge">
                        <PART_ID>LANDING_GEAR_LightL</PART_ID>
                    </UseTemplate>
                </Component>
                <Component ID="LANDING_GEAR_Gear_LightN" Node="landing_gear_light_N">
                    <UseTemplate Name="ASOBO_GT_Emissive_Gauge">
                        <PART_ID>LANDING_GEAR_Gear_LightN</PART_ID>
                    </UseTemplate>
                </Component>
                <Component ID="LANDING_GEAR_Gear_LightR" Node="landing_gear_light_R">
                    <UseTemplate Name="ASOBO_GT_Emissive_Gauge">
                        <PART_ID>LANDING_GEAR_Gear_LightR</PART_ID>
                    </UseTemplate>
                </Component>
            </Component>
            <Component ID="LANDING_GEAR_Gear_LightUnsafe" Node="landing_gear_light_gear_unsafe">
                <UseTemplate Name="ASOBO_GT_Update">
                    <FREQUENCY>1</FREQUENCY>
                    <UPDATE_CODE>(L:XMLVAR_LandingGearLightBlink) ! (&gt;L:XMLVAR_LandingGearLightBlink)</UPDATE_CODE>
                </UseTemplate>
                <UseTemplate Name="ASOBO_GT_Update">
                    <FREQUENCY>1</FREQUENCY> <!-- 1 Hz -->
                    <UPDATE_CODE>(B:LANDING_GEAR_Light_Test, Bool) if{ (L:XMLVAR_LandingGearLightTesting) ! (&gt;L:XMLVAR_LandingGearLightTesting) }</UPDATE_CODE>
                </UseTemplate>
                <UseTemplate Name="ASOBO_GT_Update">
                    <FREQUENCY>16</FREQUENCY> <!-- 16 Hz -->
                    <UPDATE_CODE>(B:LANDING_GEAR_Check_Down, Bool) if{ (L:XMLVAR_LandingGearLightTesting) ! (&gt;L:XMLVAR_LandingGearLightTesting) }</UPDATE_CODE>
                </UseTemplate>
                <UseTemplate Name="ASOBO_GT_Emissive_Gauge">
                    <PART_ID>LANDING_GEAR_Gear_LightUnsafe</PART_ID>
                    <EMISSIVE_CODE>
                        (B:LANDING_GEAR_Light_Test, Bool) if{
                            (L:XMLVAR_LandingGearLightBlink) sp0 g1
                        } els{
                            (A:GEAR HANDLE POSITION, Bool) 0 == (A:SIM ON GROUND, Bool) and if{ 1 sp0 g1 }
                            (A:GEAR RIGHT POSITION, Percent) 0 &gt; (A:GEAR RIGHT POSITION, Percent) 100 &lt; and
                            (A:GEAR CENTER POSITION, Percent) 0 &gt; (A:GEAR CENTER POSITION, Percent) 100 &lt; and or
                            (A:GEAR LEFT POSITION, Percent) 0 &gt; (A:GEAR LEFT POSITION, Percent) 100 &lt; and or sp0
                        } :1 l0 if{ 0.1 1 (B:LIGHTING_Dimmer_Light, Bool) ? } els{ 0 }
                    </EMISSIVE_CODE>
                </UseTemplate>
            </Component>
            <UseTemplate Name="ASOBO_LANDING_GEAR_Push_Check_Down_Template">
                <NODE_ID>Landing_Gear_Switch_Check_Down</NODE_ID>
                <ANIM_NAME>Landing_Gear_Switch_Check_Down</ANIM_NAME>
            </UseTemplate>
            <UseTemplate Name="ASOBO_LANDING_GEAR_Push_Light_Test_Template">
                <NODE_ID>Landing_Gear_Switch_Light_Test</NODE_ID>
                <ANIM_NAME>Landing_Gear_Switch_Light_Test</ANIM_NAME>
            </UseTemplate>
            <CameraTitle>PFD</CameraTitle>
        </Component>

        <!-- PRESSURIZATION ############################# -->
        <Component ID="PRESSURIZATION">
            <UseTemplate Name="ASOBO_GT_Update">
                <UPDATE_ONCE>True</UPDATE_ONCE>
                <UPDATE_CODE>(&gt;B:PRESSURIZATION_Micro_Mask_Toggle)</UPDATE_CODE>
            </UseTemplate>
            <UseTemplate Name="ASOBO_PRESSURIZATION_Switch_Bleed_Template">
                <NODE_ID>pressurization_switch_bleed</NODE_ID>
                <THRESHOLD_MOUSE>0.01</THRESHOLD_MOUSE>
            </UseTemplate>
            <UseTemplate Name="ASOBO_PRESSURIZATION_Push_Dump_Template">
                <IS_AIRLINER>True</IS_AIRLINER>
                <NODE_ID>PRESSURIZATION_PUSH_DUMP</NODE_ID>
                <ANIM_NAME>PRESSURIZATION_PUSH_DUMP</ANIM_NAME>
                <COVER_NODE_ID>PRESSURIZATION_PUSH_DUMP_cover</COVER_NODE_ID>
                <COVER_ANIM_NAME>PRESSURIZATION_PUSH_DUMP_cover</COVER_ANIM_NAME>
                <NORM_EMISSIVE_NODE_ID>PRESSURIZATION_PUSH_NORM_text</NORM_EMISSIVE_NODE_ID>
                <DUMP_EMISSIVE_NODE_ID>PRESSURIZATION_PUSH_DUMP_text</DUMP_EMISSIVE_NODE_ID>
                <ADDITIONAL_LIGHT_TEST>(L:XMLVAR_LTS_Test) or</ADDITIONAL_LIGHT_TEST>
            </UseTemplate>
            <UseTemplate Name="ASOBO_PRESSURIZATION_Push_MicroMask_Template">
                <IS_AIRLINER>True</IS_AIRLINER>
                <NODE_ID>PUSH_BUTTON</NODE_ID>
                <ANIM_NAME>PUSH_BUTTON</ANIM_NAME>
                <COVER_NODE_ID>PUSH_BUTTON_cover</COVER_NODE_ID>
                <COVER_ANIM_NAME>PUSH_BUTTON_cover</COVER_ANIM_NAME>
                <MICRO_EMISSIVE_NODE_ID>PUSH_MICRO_text</MICRO_EMISSIVE_NODE_ID>
                <MASK_EMISSIVE_NODE_ID>PUSH_MASK_text</MASK_EMISSIVE_NODE_ID>
                <ADDITIONAL_LIGHT_TEST>(L:XMLVAR_LTS_Test) or</ADDITIONAL_LIGHT_TEST>
            </UseTemplate>
            <CameraTitle>PFD</CameraTitle>
        </Component>
        <Component ID="PRESSURIZATION_Overhead">
            <UseTemplate Name="ASOBO_PRESSURIZATION_Switch_Passenger_Oxygen_Template">
                <ANIM_NAME>TOPNOPANEL_SWITCH_DEPLOY</ANIM_NAME>
                <NODE_ID>TOPNOPANEL_SWITCH_DEPLOY</NODE_ID>
                <PART_ID>OXYGEN_Switch_Passenger</PART_ID>
            </UseTemplate>
            <UseTemplate Name="ASOBO_PRESSURIZATION_Switch_Oxygen_Template">
                <ANIM_NAME>TOPNOPANEL_SWITCH_OXYGEN</ANIM_NAME>
                <NODE_ID>TOPNOPANEL_SWITCH_OXYGEN</NODE_ID>
                <PART_ID>OXYGEN_Switch_Copilot</PART_ID>
            </UseTemplate>
            <CameraTitle>Overhead</CameraTitle>
        </Component>

        <!-- == PARAMS == -->
        <!-- Unfeathered -->
        <Macro Name="ThrottleValPropLeverChange">0</Macro>

        <!-- Feathered -->
        <Macro Name="ConditionPosIdleHI">30</Macro>
        <Macro Name="ConditionPosIdleLO">0</Macro>
        <Macro Name="ConditionPosCutoff">0</Macro>

        <!-- Other -->
        <Macro Name="PosIsUnFeathered">100</Macro>
        <Macro Name="PosIsFeathered">-25</Macro>

        <Macro Name="ManualOverrideTreshold">50</Macro>

        <!-- == 16k CONVERSIONS == -->
        <Macro Name="ConvertTo16k">163.84 * flr</Macro>
        <Macro Name="ThrottleValPropLeverChange16k">@ThrottleValPropLeverChange @ConvertTo16k</Macro>
        <Macro Name="ThrottleGateBeta">@ThrottleValPropLeverChange</Macro>
        <Macro Name="ThrottleGateBeta16k">@ThrottleGateBeta @ConvertTo16k</Macro>
        <Macro Name="PosIsUnFeathered16k">@PosIsUnFeathered @ConvertTo16k</Macro>
        <Macro Name="PosIsFeathered16k">@PosIsFeathered @ConvertTo16k</Macro>

        <!-- == FUNCTIONS == -->
        <Macro Name="IsManualFuelOverrideOn">(B:FUEL_Manual_Override, percent) @ManualOverrideTreshold &gt;</Macro>
        <Macro Name="ToggleFuelValve">(&gt;K:TOGGLE_FUEL_VALVE_ENG1)</Macro>
        <Macro Name="OpenFuelValve">(A:GENERAL ENG FUEL VALVE:1, Bool) ! if{ @ToggleFuelValve }</Macro>
        <Macro Name="CloseFuelValve">(A:GENERAL ENG FUEL VALVE:1, Bool) if{ @ToggleFuelValve }</Macro>
        <Macro Name="SetToConditionPos_Code">@IsManualFuelOverrideOn ! if{ l0 @ConvertTo16k (&gt;K:THROTTLE1_SET) }</Macro>
        <Macro Name="SetToConditionPosIdleHI_Code">@ConditionPosIdleHI sp0 @SetToConditionPos_Code</Macro>
        <Macro Name="SetToConditionPosIdleLO_Code">@ConditionPosIdleLO sp0 @SetToConditionPos_Code</Macro>
        <Macro Name="SetToConditionPosCutoff_Code">@ConditionPosCutoff sp0 @SetToConditionPos_Code</Macro>
        <Macro Name="SetToFeatheredSim">@PosIsFeathered16k (&gt;K:PROP_PITCH_SET)</Macro>
        <Macro Name="SetToFeathered">@SetToFeatheredSim @SetToConditionPosIdleHI_Code</Macro>
        <Macro Name="SetToUnFeatheredSim">@PosIsUnFeathered16k (&gt;K:PROP_PITCH_SET)</Macro>
        <Macro Name="SetToUnFeathered">@SetToUnFeatheredSim @ThrottleValPropLeverChange16k (&gt;K:THROTTLE1_SET)</Macro>
        <Macro Name="SetThrottlePosition">@IsManualFuelOverrideOn ! if{ l0 (&gt;K:THROTTLE1_SET) }</Macro>

        <!-- ENGINE ##################################### -->
        <Component ID="ENGINE_Pedestal">
            <Component ID="ENGINE_Lever_Throttle" Node="lever_throttle_horizontal">
                <Parameters Type="Override">
                    <USE_IDLE_POS_SNAP_ASSISTANCE>@UseIdlePosSnapAssistance</USE_IDLE_POS_SNAP_ASSISTANCE>
                </Parameters>
                <Parameters Type="Override">
                    <Condition Valid="USE_IDLE_POS_SNAP_ASSISTANCE">
                        <MIN_TIME_HELD_BEFORE_REVERSE>@IdlePosSnapAssistance_MinTimebeforeReverse</MIN_TIME_HELD_BEFORE_REVERSE>
                        <THRESHOLD_HELD_DETECTION>@IdlePosSnapAssistance_ThresholdHeldDetection</THRESHOLD_HELD_DETECTION>
                        <VALUE_IDLE>0</VALUE_IDLE>
                    </Condition>
                </Parameters>
                <Parameters Type="Override">
                    <Condition Valid="USE_IDLE_POS_SNAP_ASSISTANCE">
                        <ON_BEFORE_DEC>
                        (O:_Process_Idle_Pose_Snap_Assist) if{
                            (A:GENERAL ENG THROTTLE LEVER POSITION:1, position 16k) sp0
                            (A:GENERAL ENG THROTTLE LEVER POSITION:1, position 16k) p0 - sp1
                            (O:TS_Last_Dec_Event) (&gt;O:TS_Prev_Last_Dec_Event) (E:ABSOLUTE TIME, second) (&gt;O:TS_Last_Dec_Event)
                        }
                        </ON_BEFORE_DEC>
                        <ON_BEFORE_DEC_SET>
                        (O:_Process_Idle_Pose_Snap_Assist) if{
                            s2 sign l0 sign != if{
                                (* Considered held if called at an interval lower than #THRESHOLD_HELD_DETECTION#s *)
                                (O:TS_Last_Dec_Event) (O:TS_Prev_Last_Dec_Event) - abs #THRESHOLD_HELD_DETECTION# &lt; if{
                                    (O:TS_Last_Dec_Event) (O:TS_First_Dec_Event) - abs #MIN_TIME_HELD_BEFORE_REVERSE# &lt; if{
                                        #VALUE_IDLE# sp2
                                    } els{
                                        (O:_ReverseInputsAllowed) ! if{ (O:TS_Last_Dec_Event) (&gt;O:TS_First_Dec_Event) #VALUE_IDLE# sp2 }
                                    }
                                } els{
                                    (O:TS_Last_Dec_Event) (&gt;O:TS_First_Dec_Event) #VALUE_IDLE# sp2 1 (&gt;O:_ReverseInputsAllowed)
                                }
                            } els{ (O:TS_Last_Dec_Event) (&gt;O:TS_First_Dec_Event) 0 (&gt;O:_ReverseInputsAllowed) } l2
                        }
                        </ON_BEFORE_DEC_SET>
                        <ON_AFTER_DEC>0 (&gt;O:_Process_Idle_Pose_Snap_Assist)</ON_AFTER_DEC>
                        <ACTIVATE_IDLE_POS_SNAP_ASSIST>1 (&gt;O:_Process_Idle_Pose_Snap_Assist)</ACTIVATE_IDLE_POS_SNAP_ASSIST>
                    </Condition>
                </Parameters>
                <UseTemplate Name="ASOBO_GT_Update">
                    <FREQUENCY>1</FREQUENCY>
                    <!-- No AutoFeather Switch - So ensure it is always active -->
                    <UPDATE_CODE>(A:PANEL AUTO FEATHER SWITCH, Bool) ! if{ (&gt;K:TOGGLE_AUTOFEATHER_ARM) }</UPDATE_CODE>
                </UseTemplate>
                <Component ID="Throttle_Lever" Node="hitbox_lever_throttle">
                    <Parameters Type="Override">
                        <IDLE>0.5</IDLE>
                        <TRUE_IDLE_01 Process="Float">0 (A:THROTTLE LOWER LIMIT, percent) - 100 (A:THROTTLE LOWER LIMIT, percent) - /</TRUE_IDLE_01>
                        <UPPER_LIMIT>16384</UPPER_LIMIT>
                        <LOWER_LIMIT>(A:THROTTLE LOWER LIMIT, position 16k)</LOWER_LIMIT>
                        <REVERSER_CHECK>sp0 (A:GENERAL ENG REVERSE THRUST ENGAGED:1, Boolean) l0 0 &gt; and if{ (A:THROTTLE LOWER LIMIT, percent over 100) l0 * sp0 } l0</REVERSER_CHECK>
                        <NEGATIVE_CHECK>sp0 l0 0 &lt; if{ l0 (A:THROTTLE LOWER LIMIT, percent over 100) abs * sp0 } l0</NEGATIVE_CHECK>
                    </Parameters>
                    <Parameters Type="Override">
                        <!-- adjust drag value based on anim value (positive range) -->
                        <LERP_IDLE_FULL>l0 #IDLE# - 1 #IDLE# - / 1 #TRUE_IDLE_01# - * #TRUE_IDLE_01# +</LERP_IDLE_FULL>
                        <!-- adjust drag value based on anim value (negative range) -->
                        <LERP_IDLE_REVERSE>l0 #IDLE# - #IDLE# / #TRUE_IDLE_01# * #TRUE_IDLE_01# +</LERP_IDLE_REVERSE>
                        <ANIM_POS_X_SPEED>600</ANIM_POS_X_SPEED>
                        <ANIM_POS_Y_SPEED>400</ANIM_POS_Y_SPEED>
                    </Parameters>
                    <Parameters Type="Override">
                        <ADJUST_RAW_DRAG_VALUE>sp0 #LERP_IDLE_FULL# #LERP_IDLE_REVERSE# l0 #IDLE# &gt; ?</ADJUST_RAW_DRAG_VALUE>
                        <LOWER_POSITION_PCT_OVER_100 Process="Float">#LOWER_LIMIT# #UPPER_LIMIT# /</LOWER_POSITION_PCT_OVER_100>
                        <ILDE_ANIM_POS Process="Float">1 #UPPER_LIMIT# #UPPER_LIMIT# #LOWER_LIMIT# - / - 100 *</ILDE_ANIM_POS>
                        <GET_ANIM_TARGET_X>(B:ENGINE_Throttle_Feathering, Bool) 100 *</GET_ANIM_TARGET_X>
                        <GET_ANIM_TARGET_Y>
                            (B:ENGINE_Throttle, percent over 100) sp0
                            (B:ENGINE_Throttle_Feathering, Bool) if{
                                l0 50 * sp0
                            } els{
                                l0 #TRUE_IDLE_01# - 1 #TRUE_IDLE_01# - / 1 #IDLE# - * #IDLE# + (* Upper part of throttle *)
                                l0 #TRUE_IDLE_01# / #IDLE# * (* Reverse *)
                                l0 #TRUE_IDLE_01# &gt; ? 100 * sp0
                            } l0
                        </GET_ANIM_TARGET_Y>
                        <LERP_ANIM_POS_X>
                            (O:_Anim_Pos_X_Target) (O:_Anim_Pos_X_Current) - s0 sign (A:ANIMATION DELTA TIME, seconds) * #ANIM_POS_X_SPEED# * sp1
                            (O:_Anim_Pos_X_Target) (O:_Anim_Pos_X_Current) l1 + l0 abs l1 abs &lt; ? (&gt;O:_Anim_Pos_X_Current)
                        </LERP_ANIM_POS_X>
                        <LERP_ANIM_POS_Y>
                            (O:_Anim_Pos_Y_Target) (O:_Anim_Pos_Y_Current) - s0 sign (A:ANIMATION DELTA TIME, seconds) * #ANIM_POS_Y_SPEED# * sp1
                            (O:_Anim_Pos_Y_Target) (O:_Anim_Pos_Y_Current) l1 + l0 abs l1 abs &lt; ? (&gt;O:_Anim_Pos_Y_Current)
                        </LERP_ANIM_POS_Y>
                    </Parameters>
                    <UseTemplate Name="ASOBO_GT_Update">
                        <UPDATE_ONCE>True</UPDATE_ONCE>
                        <UPDATE_CODE>
                            #GET_ANIM_TARGET_X# (&gt;O:_Anim_Pos_X_Current)
                            #GET_ANIM_TARGET_Y# (&gt;O:_Anim_Pos_Y_Current)
                        </UPDATE_CODE>
                    </UseTemplate>
                    <UseTemplate Name="ASOBO_GT_Anim_Code">
                        <ANIM_NAME>lever_throttle_horizontal</ANIM_NAME>
                        <ANIM_CODE>
                            (O:_Anim_Pos_Y_Current) 50 == sp1
                            l1 ! (O:_Anim_Pos_X_Current) #GET_ANIM_TARGET_X# != and (&gt;O:_Anim_Pos_X_Waiting)
                            #GET_ANIM_TARGET_X# (O:_Anim_Pos_X_Current) l1 ? (&gt;O:_Anim_Pos_X_Target)
                            l1 if{
                                #LERP_ANIM_POS_X#
                            }
                            (O:_Anim_Pos_X_Current)
                        </ANIM_CODE>
                        <ANIM_LENGTH>100</ANIM_LENGTH>
                        <ANIM_LAG>0</ANIM_LAG>
                        <INVERT_ANIM>True</INVERT_ANIM>
                    </UseTemplate>
                    <UseTemplate Name="ASOBO_GT_Anim_Code">
                        <ANIM_NAME>lever_throttle</ANIM_NAME>
                        <PART_ID>THROTTLE_LEVER</PART_ID>
                        <ANIM_LENGTH>100</ANIM_LENGTH>
                        <ANIM_CODE>
                            (O:_Anim_Pos_X_Waiting) if{
                                50 (&gt;O:_Anim_Pos_Y_Target)
                            } els{
                                #GET_ANIM_TARGET_Y# (&gt;O:_Anim_Pos_Y_Target)
                            }
                            (O:_Anim_Pos_X_Current) 0 == (O:_Anim_Pos_X_Current) 100 == or if{
                                #LERP_ANIM_POS_Y#
                            }
                            (O:_Anim_Pos_Y_Current)
                        </ANIM_CODE>
                        <ANIM_LAG>0</ANIM_LAG>
                    </UseTemplate>
                    <UseTemplate Name="ASOBO_GT_Anim_Code">
                        <ANIM_NAME>LEVER_THROTTLE_UNLOCK_TRIGGER</ANIM_NAME>
                        <ANIM_CODE>(O:_Anim_Pos_X_Current) 0 == (O:_Anim_Pos_Y_Current) 49.9 &lt; and 100 *</ANIM_CODE>
                    </UseTemplate>
                    <UseInputEvent ID="ENGINE">
                        <LEVER_ID>Throttle</LEVER_ID>
                        <TT_VALUE>
                            @IsManualFuelOverrideOn if{
                                (R:1:@TT_Package.GT_STATE_OVERRIDDEN)
                            } els{
                                (B:ENGINE_Throttle_Feathering, Bool) if{
                                    (A:GENERAL ENG FUEL VALVE:1, Bool) ! if{
                                        (R:1:@TT_Package.GT_STATE_CUTOFF)
                                    } els{
                                        (A:GENERAL ENG THROTTLE LEVER POSITION:1, percent) 15 &lt;= if{
                                            (R:1:@TT_Package.GT_STATE_LOW_IDLE)
                                        } els{
                                            (R:1:@TT_Package.GT_STATE_HIGH_IDLE)
                                        }
                                    }
                                } els{
                                    (A:GENERAL ENG THROTTLE LEVER POSITION:1, percent) '%.1f%%' @sprintf
                                }
                            }
                        </TT_VALUE>
                        <TT_VALUE_IS_DYNAMIC>True</TT_VALUE_IS_DYNAMIC>
                        <TT_DESCRIPTION_ID>@TT_Package.ENGINE_THROTTLE_ACTION_1ENG</TT_DESCRIPTION_ID>
                        <SET_STATE_EXTERNAL>
                            (B:ENGINE_Throttle_Feathering, Bool) p1 != if{ (&gt;B:ENGINE_Throttle_Feathering_Toggle) }
                            (B:ENGINE_Throttle_Feathering, Bool) if{
                                #UPPER_LIMIT# 4 / sp0 l0 3 * sp1
                                l0 l1 p0 rng if{
                                    @SetToConditionPosIdleLO_Code
                                    @OpenFuelValve
                                } els{
                                    p0 50 &gt; if{
                                        @SetToConditionPosIdleHI_Code
                                        @OpenFuelValve
                                    } els{
                                        @SetToConditionPosCutoff_Code
                                        @CloseFuelValve
                                    }
                                }
                            } els{
                                @SetThrottlePosition
                                @OpenFuelValve
                            }
                        </SET_STATE_EXTERNAL>
                        <GET_STATE_EXTERNAL>
                            @IsManualFuelOverrideOn if{
                                (O:ENGINE_Throttle_Position) sp0
                            } els{
                                (B:ENGINE_Throttle_Feathering, Bool) if{
                                    (A:GENERAL ENG FUEL VALVE:1, Bool) ! if{
                                        0 sp0
                                    } els{
                                        #UPPER_LIMIT# #UPPER_LIMIT# 2 / (A:GENERAL ENG THROTTLE LEVER POSITION:1, percent) 15 &gt; ? sp0
                                    }
                                } els{
                                    (A:GENERAL ENG THROTTLE LEVER POSITION:1, position 16k) sp0
                                }
                            } (B:ENGINE_Throttle_Feathering, Bool) l0
                        </GET_STATE_EXTERNAL>
                        <NO_ANIM_VAR_UPDATE>True</NO_ANIM_VAR_UPDATE>
                        <INIT_CODE>
                            (B:ENGINE_Throttle_Feathering, Bool) (O:ENGINE_Throttle_Position) 0 == and (A:GENERAL ENG FUEL VALVE:1, Bool) and
                            @IsManualFuelOverrideOn ! (A:GENERAL ENG FUEL VALVE:1, Bool) ! or or if{
                                (B:ENGINE_Throttle_Feathering, Bool) (A:GENERAL ENG FUEL VALVE:1, Bool) ! or if{
                                    (A:GENERAL ENG FUEL VALVE:1, Bool) if{
                                        @IsManualFuelOverrideOn if{ 0 (&gt;B:FUEL_Manual_Override_Set) }
                                        (A:GENERAL ENG THROTTLE LEVER POSITION:1, percent) 15 &gt; if{
                                            @SetToConditionPosIdleHI_Code #UPPER_LIMIT# (&gt;O:ENGINE_Throttle_Position)
                                        } els{
                                            @SetToConditionPosIdleLO_Code #UPPER_LIMIT# 2 / (&gt;O:ENGINE_Throttle_Position)
                                        }
                                    } els{
                                        @SetToConditionPosCutoff_Code 0 (&gt;O:ENGINE_Throttle_Position)
                                        (B:ENGINE_Throttle_Feathering, Bool) ! if{ (&gt;B:ENGINE_Throttle_Feathering_Feather) }
                                    }
                                } els{
                                    (B:ENGINE_Throttle_Feathering, Bool) if{ (&gt;B:ENGINE_Throttle_Feathering_UnFeather) }
                                    (A:GENERAL ENG THROTTLE LEVER POSITION:1, position 16k) (&gt;O:ENGINE_Throttle_Position)
                                }
                            }
                            @IsManualFuelOverrideOn ! if{
                                @PosIsFeathered16k @PosIsUnFeathered16k (A:GENERAL ENG PROPELLER LEVER POSITION:1, position 16k) @16k 0.5 * &lt; s1 ? sp0
                                (A:GENERAL ENG PROPELLER LEVER POSITION:1, position 16k) l0 != if{
                                    l0 (&gt;K:PROP_PITCH_SET)
                                }
                                l1 (B:ENGINE_Throttle_Feathering, Bool) != if{ l1 if{ @SetToConditionPosIdleHI_Code } els{ 0 sp0 @SetThrottlePosition } }
                            }
                        </INIT_CODE>
                        <VALUE_CODE>(O:ENGINE_Throttle_Position) s0 16384 / l0 #LOWER_LIMIT# - #UPPER_LIMIT# #LOWER_LIMIT# - / (B:ENGINE_Throttle_Feathering, Bool) ? 100 *</VALUE_CODE>
                        <INC_CODE_ADJUST_VALUE>#UPPER_LIMIT# /</INC_CODE_ADJUST_VALUE>
                        <Condition Valid="USE_IDLE_POS_SNAP_ASSISTANCE">
                            <True>
                                <DEC_CODE_ADJUST_VALUE>#ON_BEFORE_DEC_SET# #UPPER_LIMIT# /</DEC_CODE_ADJUST_VALUE>
                                <ON_BEFORE_DEC_CODE>#ON_BEFORE_DEC# </ON_BEFORE_DEC_CODE>
                                <ON_AFTER_DEC_CODE> #ON_AFTER_DEC#</ON_AFTER_DEC_CODE>
                            </True>
                            <False>
                                <DEC_CODE_ADJUST_VALUE>#UPPER_LIMIT# /</DEC_CODE_ADJUST_VALUE>
                            </False>
                        </Condition>
                        <INC_ARG_COUNT>2</INC_ARG_COUNT>
                        <INC_PARAM_0>#UPPER_LIMIT# 2 / #UPPER_LIMIT# 20 / (B:ENGINE_Throttle_Feathering, Bool) ? p0 *</INC_PARAM_0>
                        <INC_PARAM_0_IS_DYNAMIC>True</INC_PARAM_0_IS_DYNAMIC>
                        <INC_PARAM_1>1 0 p1 ?</INC_PARAM_1>
                        <INC_PARAM_1_IS_DYNAMIC>True</INC_PARAM_1_IS_DYNAMIC>
                        <BINDING_INC_0>Increase</BINDING_INC_0>
                        <BINDING_INC_0_EVENT_ID>THROTTLE_INCR</BINDING_INC_0_EVENT_ID>
                        <BINDING_INC_0_EVENT_ID_ONLY>True</BINDING_INC_0_EVENT_ID_ONLY>
                        <BINDING_INC_0_PARAM_0>1</BINDING_INC_0_PARAM_0>
                        <BINDING_INC_0_PARAM_1>(B:ENGINE_Throttle_Feathering, bool)</BINDING_INC_0_PARAM_1>
                        <BINDING_INC_0_PARAM_1_IS_DYNAMIC>True</BINDING_INC_0_PARAM_1_IS_DYNAMIC>
                        <DEC_ARG_COUNT>2</DEC_ARG_COUNT>
                        <DEC_PARAM_0>#UPPER_LIMIT# 2 / #UPPER_LIMIT# 20 / (B:ENGINE_Throttle_Feathering, Bool) ? p0 *</DEC_PARAM_0>
                        <DEC_PARAM_0_IS_DYNAMIC>True</DEC_PARAM_0_IS_DYNAMIC>
                        <DEC_PARAM_1>1 0 p1 ?</DEC_PARAM_1>
                        <DEC_PARAM_1_IS_DYNAMIC>True</DEC_PARAM_1_IS_DYNAMIC>
                        <Condition Valid="USE_IDLE_POS_SNAP_ASSISTANCE">
                            <True>
                                <!-- Implement all dec events to make use of the idle pos snap assistance -->
                                <BINDING_DEC_0>Decrease_All</BINDING_DEC_0>
                                <BINDING_DEC_0_EVENT_ID>THROTTLE_DECR</BINDING_DEC_0_EVENT_ID>
                                <BINDING_DEC_0_EVENT_ID_ONLY>True</BINDING_DEC_0_EVENT_ID_ONLY>
                                <BINDING_DEC_0_PARAM_0>#ACTIVATE_IDLE_POS_SNAP_ASSIST# 1</BINDING_DEC_0_PARAM_0>
                                <BINDING_DEC_0_PARAM_0_IS_DYNAMIC>True</BINDING_DEC_0_PARAM_0_IS_DYNAMIC>
                                <BINDING_DEC_0_PARAM_1>(B:ENGINE_Throttle_Feathering, bool)</BINDING_DEC_0_PARAM_1>
                                <BINDING_DEC_0_PARAM_1_IS_DYNAMIC>True</BINDING_DEC_0_PARAM_1_IS_DYNAMIC>
                                <BINDING_DEC_1>Decrease</BINDING_DEC_1>
                                <BINDING_DEC_1_EVENT_ID>THROTTLE1_DECR</BINDING_DEC_1_EVENT_ID>
                                <BINDING_DEC_1_EVENT_ID_ONLY>True</BINDING_DEC_1_EVENT_ID_ONLY>
                                <BINDING_DEC_1_PARAM_0>#ACTIVATE_IDLE_POS_SNAP_ASSIST# 1</BINDING_DEC_1_PARAM_0>
                                <BINDING_DEC_1_PARAM_0_IS_DYNAMIC>True</BINDING_DEC_1_PARAM_0_IS_DYNAMIC>
                                <BINDING_DEC_1_PARAM_1>(B:ENGINE_Throttle_Feathering, bool)</BINDING_DEC_1_PARAM_1>
                                <BINDING_DEC_1_PARAM_1_IS_DYNAMIC>True</BINDING_DEC_1_PARAM_1_IS_DYNAMIC>
                                <BINDING_DEC_2>Half_Decrease_All</BINDING_DEC_2>
                                <BINDING_DEC_2_EVENT_ID>THROTTLE_DECR_SMALL</BINDING_DEC_2_EVENT_ID>
                                <BINDING_DEC_2_EVENT_ID_ONLY>True</BINDING_DEC_2_EVENT_ID_ONLY>
                                <BINDING_DEC_2_PARAM_0>#ACTIVATE_IDLE_POS_SNAP_ASSIST# 0.5</BINDING_DEC_2_PARAM_0>
                                <BINDING_DEC_2_PARAM_0_IS_DYNAMIC>True</BINDING_DEC_2_PARAM_0_IS_DYNAMIC>
                                <BINDING_DEC_2_PARAM_1>(B:ENGINE_Throttle_Feathering, bool)</BINDING_DEC_2_PARAM_1>
                                <BINDING_DEC_2_PARAM_1_IS_DYNAMIC>True</BINDING_DEC_2_PARAM_1_IS_DYNAMIC>
                                <BINDING_DEC_3>Half_Decrease</BINDING_DEC_3>
                                <BINDING_DEC_3_EVENT_ID>THROTTLE1_DECR_SMALL</BINDING_DEC_3_EVENT_ID>
                                <BINDING_DEC_3_EVENT_ID_ONLY>True</BINDING_DEC_3_EVENT_ID_ONLY>
                                <BINDING_DEC_3_PARAM_0>#ACTIVATE_IDLE_POS_SNAP_ASSIST# 0.5</BINDING_DEC_3_PARAM_0>
                                <BINDING_DEC_3_PARAM_0_IS_DYNAMIC>True</BINDING_DEC_3_PARAM_0_IS_DYNAMIC>
                                <BINDING_DEC_3_PARAM_1>(B:ENGINE_Throttle_Feathering, bool)</BINDING_DEC_3_PARAM_1>
                                <BINDING_DEC_3_PARAM_1_IS_DYNAMIC>True</BINDING_DEC_3_PARAM_1_IS_DYNAMIC>
                            </True>
                            <False>
                                <BINDING_DEC_0>Decrease</BINDING_DEC_0>
                                <BINDING_DEC_0_EVENT_ID>THROTTLE_DECR</BINDING_DEC_0_EVENT_ID>
                                <BINDING_DEC_0_EVENT_ID_ONLY>True</BINDING_DEC_0_EVENT_ID_ONLY>
                                <BINDING_DEC_0_PARAM_0>1</BINDING_DEC_0_PARAM_0>
                                <BINDING_DEC_0_PARAM_1>(B:ENGINE_Throttle_Feathering, bool)</BINDING_DEC_0_PARAM_1>
                                <BINDING_DEC_0_PARAM_1_IS_DYNAMIC>True</BINDING_DEC_0_PARAM_1_IS_DYNAMIC>
                            </False>
                        </Condition>
                        <SET_ARG_COUNT>2</SET_ARG_COUNT> <!-- Axis value, feathered/unfeathered -->
                        <SET_PARAM_0>p0 16384 *</SET_PARAM_0>
                        <SET_PARAM_0_IS_DYNAMIC>True</SET_PARAM_0_IS_DYNAMIC>
                        <SET_PARAM_1>1 0 p1 ?</SET_PARAM_1>
                        <SET_PARAM_1_IS_DYNAMIC>True</SET_PARAM_1_IS_DYNAMIC>
                        <BINDING_SET_0>Cutoff</BINDING_SET_0>
                        <BINDING_SET_0_PARAM_0>0</BINDING_SET_0_PARAM_0>
                        <BINDING_SET_0_PARAM_1>1</BINDING_SET_0_PARAM_1>
                        <BINDING_SET_1>Low_Idle</BINDING_SET_1>
                        <BINDING_SET_1_PARAM_0>0.5</BINDING_SET_1_PARAM_0>
                        <BINDING_SET_1_PARAM_1>1</BINDING_SET_1_PARAM_1>
                        <BINDING_SET_2>High_Idle</BINDING_SET_2>
                        <BINDING_SET_2_PARAM_0>1</BINDING_SET_2_PARAM_0>
                        <BINDING_SET_2_PARAM_1>1</BINDING_SET_2_PARAM_1>
                        <BINDING_SET_3>Idle</BINDING_SET_3>
                        <!-- <BINDING_SET_3_EVENT_ID>THROTTLE_CUT</BINDING_SET_3_EVENT_ID> -->
                        <BINDING_SET_3_PARAM_0>0</BINDING_SET_3_PARAM_0>
                        <BINDING_SET_3_PARAM_1>0</BINDING_SET_3_PARAM_1>
                        <BINDING_SET_4>Full_Forward</BINDING_SET_4>
                        <!-- <BINDING_SET_4_EVENT_ID>THROTTLE_FULL</BINDING_SET_4_EVENT_ID> -->
                        <BINDING_SET_4_PARAM_0>1</BINDING_SET_4_PARAM_0>
                        <BINDING_SET_4_PARAM_1>0</BINDING_SET_4_PARAM_1>
                        <BINDING_SET_5>Full_Backward</BINDING_SET_5>
                        <BINDING_SET_5_PARAM_0>#LOWER_POSITION_PCT_OVER_100#</BINDING_SET_5_PARAM_0>
                        <BINDING_SET_5_PARAM_1>0</BINDING_SET_5_PARAM_1>
                        <BINDING_SET_6>Set_Feathered</BINDING_SET_6>
                        <BINDING_SET_6_PARAM_0>p0</BINDING_SET_6_PARAM_0>
                        <BINDING_SET_6_PARAM_0_IS_DYNAMIC>True</BINDING_SET_6_PARAM_0_IS_DYNAMIC>
                        <BINDING_SET_6_PARAM_1>0</BINDING_SET_6_PARAM_1>
                        <BINDING_SET_7>Set_UnFeathered</BINDING_SET_7>
                        <BINDING_SET_7_PARAM_0>p0</BINDING_SET_7_PARAM_0>
                        <BINDING_SET_7_PARAM_0_IS_DYNAMIC>True</BINDING_SET_7_PARAM_0_IS_DYNAMIC>
                        <BINDING_SET_7_PARAM_1>0</BINDING_SET_7_PARAM_1>
                        <BINDING_SET_8>Flight_Idle</BINDING_SET_8>
                        <BINDING_SET_8_PARAM_0>0.25</BINDING_SET_8_PARAM_0>
                        <BINDING_SET_8_PARAM_1>0</BINDING_SET_8_PARAM_1>
                        <BINDING_SET_9>THROTTLE1_SET</BINDING_SET_9>
                        <BINDING_SET_9_EVENT_ID>THROTTLE1_SET</BINDING_SET_9_EVENT_ID>
                        <BINDING_SET_9_EVENT_ID_ONLY>True</BINDING_SET_9_EVENT_ID_ONLY>
                        <BINDING_SET_9_PARAM_0>p1 @S16KToS1 #NEGATIVE_CHECK#</BINDING_SET_9_PARAM_0>
                        <BINDING_SET_9_PARAM_0_IS_DYNAMIC>True</BINDING_SET_9_PARAM_0_IS_DYNAMIC>
                        <BINDING_SET_10>THROTTLE_SET</BINDING_SET_10>
                        <BINDING_SET_10_EVENT_ID>THROTTLE_SET</BINDING_SET_10_EVENT_ID>
                        <BINDING_SET_10_EVENT_ID_ONLY>True</BINDING_SET_10_EVENT_ID_ONLY>
                        <BINDING_SET_10_PARAM_0>p1 @S16KToS1 #NEGATIVE_CHECK#</BINDING_SET_10_PARAM_0>
                        <BINDING_SET_10_PARAM_0_IS_DYNAMIC>True</BINDING_SET_10_PARAM_0_IS_DYNAMIC>
                        <BINDING_SET_11>THROTTLE1_AXIS_SET_EX1</BINDING_SET_11>
                        <BINDING_SET_11_EVENT_ID>THROTTLE1_AXIS_SET_EX1</BINDING_SET_11_EVENT_ID>
                        <BINDING_SET_11_EVENT_ID_ONLY>True</BINDING_SET_11_EVENT_ID_ONLY>
                        <BINDING_SET_11_PARAM_0>p1 @S16KTo01 #REVERSER_CHECK#</BINDING_SET_11_PARAM_0>
                        <BINDING_SET_11_PARAM_0_IS_DYNAMIC>True</BINDING_SET_11_PARAM_0_IS_DYNAMIC>
                        <BINDING_SET_12>THROTTLE_AXIS_SET_EX1</BINDING_SET_12>
                        <BINDING_SET_12_EVENT_ID>THROTTLE_AXIS_SET_EX1</BINDING_SET_12_EVENT_ID>
                        <BINDING_SET_12_EVENT_ID_ONLY>True</BINDING_SET_12_EVENT_ID_ONLY>
                        <BINDING_SET_12_PARAM_0>p1 @S16KTo01 #REVERSER_CHECK#</BINDING_SET_12_PARAM_0>
                        <BINDING_SET_12_PARAM_0_IS_DYNAMIC>True</BINDING_SET_12_PARAM_0_IS_DYNAMIC>
                        <BINDING_SET_13>AXIS_THROTTLE1_SET</BINDING_SET_13>
                        <BINDING_SET_13_EVENT_ID>AXIS_THROTTLE1_SET</BINDING_SET_13_EVENT_ID>
                        <BINDING_SET_13_EVENT_ID_ONLY>True</BINDING_SET_13_EVENT_ID_ONLY>
                        <BINDING_SET_13_PARAM_0>p1 @S16KTo01 #REVERSER_CHECK#</BINDING_SET_13_PARAM_0>
                        <BINDING_SET_13_PARAM_0_IS_DYNAMIC>True</BINDING_SET_13_PARAM_0_IS_DYNAMIC>
                        <BINDING_SET_14>AXIS_THROTTLE_SET</BINDING_SET_14>
                        <BINDING_SET_14_EVENT_ID>AXIS_THROTTLE_SET</BINDING_SET_14_EVENT_ID>
                        <BINDING_SET_14_EVENT_ID_ONLY>True</BINDING_SET_14_EVENT_ID_ONLY>
                        <BINDING_SET_14_PARAM_0>p1 @S16KTo01 #REVERSER_CHECK#</BINDING_SET_14_PARAM_0>
                        <BINDING_SET_14_PARAM_0_IS_DYNAMIC>True</BINDING_SET_14_PARAM_0_IS_DYNAMIC>
                        <SIMVAR_TO_WATCH_0>GENERAL ENG FUEL VALVE:1</SIMVAR_TO_WATCH_0>
                        <SIMVAR_TO_WATCH_1>GENERAL ENG PROPELLER LEVER POSITION:1</SIMVAR_TO_WATCH_1>
                        <MIN_VALUE>0 #LOWER_LIMIT# (B:ENGINE_Throttle_Feathering, Bool) ?</MIN_VALUE>
                        <MAX_VALUE>#UPPER_LIMIT#</MAX_VALUE>
                    </UseInputEvent>
                    <UseInputEvent ID="ENGINE">
                        <BTN_ID>Throttle_Feathering</BTN_ID>
                        <TT_ICON>MOVE_AXIS_X</TT_ICON>
                        <TT_INTERACTION>PRIMARY_DOWN+SECONDARY_DOWN</TT_INTERACTION>
                        <TT_INTERACTION_LOCKABLE>PRIMARY_DOWN</TT_INTERACTION_LOCKABLE>
                        <TT_DESCRIPTION_ID>@TT_Package.ENGINE_THROTTLE_ACTION_FEATHERING</TT_DESCRIPTION_ID>
                        <SET_STATE_EXTERNAL>
                            (* sync with sim state *)
                            @IsManualFuelOverrideOn if{
                                p0 (&gt;O:ENGINE_Throttle_Feathering_Position)
                            } els{
                                p0 if{ @SetToFeathered } els{ @SetToUnFeathered }
                                (A:GENERAL ENG PROPELLER LEVER POSITION:1, position 16k) @PosIsFeathered16k - abs 1 &lt; (&gt;O:ENGINE_Throttle_Feathering_Position)
                            }
                        </SET_STATE_EXTERNAL>
                        <GET_STATE_EXTERNAL>
                            @IsManualFuelOverrideOn if{
                                (O:ENGINE_Throttle_Feathering_Position) sp0
                            } els{
                                (A:GENERAL ENG PROPELLER LEVER POSITION:1, position 16k) @PosIsFeathered16k - abs 1 &lt; sp0
                            }
                        </GET_STATE_EXTERNAL>
                        <SIM_STATE_IS_ON_EXTERNAL>l0</SIM_STATE_IS_ON_EXTERNAL>
                        <TT_VALUE>
                            @IsManualFuelOverrideOn if{
                                (R:1:@TT_Package.GT_STATE_OVERRIDDEN)
                            } els{
                                (B:ENGINE_Throttle_Feathering, Bool) if{ (R:1:@TT_Package.GT_STATE_FEATHERING) } els{ (R:1:@TT_Package.GT_STATE_UNFEATHERED) }
                            }
                        </TT_VALUE>
                        <TT_VALUE_IS_DYNAMIC>True</TT_VALUE_IS_DYNAMIC>
                        <ANIM>EXTERNAL</ANIM>
                        <STR_STATE_ON>Feather</STR_STATE_ON>
                        <BINDING_SET_0_EVENT_ID>PROP_PITCH_HI</BINDING_SET_0_EVENT_ID>
                        <STR_STATE_OFF>UnFeather</STR_STATE_OFF>
                        <BINDING_SET_1_EVENT_ID>PROP_PITCH_LO</BINDING_SET_1_EVENT_ID>
                        <SIMVAR_TO_WATCH_0>GENERAL ENG PROPELLER LEVER POSITION:1</SIMVAR_TO_WATCH_0>
                    </UseInputEvent>
                    <UseTemplate Name="ASOBO_GT_MouseRect">
                        <TOOLTIP_TITLE>@TT_Package.ENGINE_THROTTLE_TITLE</TOOLTIP_TITLE>
                        <TOOLTIP_ENTRY_0>ENGINE_Throttle</TOOLTIP_ENTRY_0>
                        <TOOLTIP_ENTRY_1>ENGINE_Throttle_Feathering</TOOLTIP_ENTRY_1>
                        <DRAG_SCALAR>0.025</DRAG_SCALAR>
                        <HIGHLIGHT_NODE_ID>LEVER_THROTTLE</HIGHLIGHT_NODE_ID>
                        <MOUSEFLAGS>Lock+Unlock+LeftDrag+LeftSingle+RightSingle</MOUSEFLAGS>
                        <CURSOR>Grab</CURSOR>
                        <CALLBACKCODE>
                            (M:Event) 'Lock' scmp 0 == if{
                                1 (&gt;O:_Limit_Needs_Recalculations)
                                1 (&gt;O:_Interacting)
                                quit
                            }
                            (M:Event) 'UnLock' scmp 0 == if{
                                0 (&gt;O:_Gate_Up)
                                0 (&gt;O:_Gate_Down)
                                0 (&gt;O:_Interacting)
                                quit
                            }
                            (M:Event) 'LeftSingle' 'RightSingle' (M:InputType) 1 == ? scmp 0 == if{
                                (B:ENGINE_Throttle_Feathering, Bool) ! (B:ENGINE_Throttle, percent) #ILDE_ANIM_POS# - abs 5 &lt; and if{ (&gt;B:ENGINE_Throttle_High_Idle) quit }
                                (B:ENGINE_Throttle_Feathering, Bool) (B:ENGINE_Throttle, percent) 100 - abs 5 &lt; and if{ (&gt;B:ENGINE_Throttle_Idle) quit }
                            }
                            (M:Event) 'LeftDrag' scmp 0 == if{
                                (O:_ResetLimitsTime) (E:SIMULATION TIME, second) &lt; if{
                                    (* Reset limits *)
                                    0 (&gt;O:_Gate_Up)
                                    0 (&gt;O:_Gate_Down)
                                    (M:InputType) 1 == if{ 1 (&gt;O:_Limit_Needs_Recalculations) }
                                }
                                (E:SIMULATION TIME, second) 0.1 + (&gt;O:_ResetLimitsTime)
                                (B:ENGINE_Throttle_Feathering, Bool) if{
                                    (M:InputType) 1 == if{
                                        -0.5 0.5 (M:Y) rng ! if{
                                            (M:Y) 0.5 &gt; if{
                                                (O:_Gate_Up) ! if{ 1 (&gt;B:ENGINE_Throttle_Inc) 1 (&gt;O:_Gate_Up) }
                                            } els{
                                                (O:_Gate_Down) ! if{ 1 (&gt;B:ENGINE_Throttle_Dec) 1 (&gt;O:_Gate_Down) }
                                            }
                                        }
                                    } els{
                                        0.15 0.35 (M:DragPercent) rng if{
                                            (&gt;B:ENGINE_Throttle_Low_Idle)
                                        } els{
                                            (M:DragPercent) 0.25 &gt; if{
                                                (&gt;B:ENGINE_Throttle_High_Idle)
                                            } els{
                                                (&gt;B:ENGINE_Throttle_Cutoff)
                                            }
                                        }
                                    }
                                } els{
                                    (O:_Limit_Needs_Recalculations) if{
                                        (B:ENGINE_Throttle, percent) #ILDE_ANIM_POS# - abs 5 &lt; ! if{
                                            0 (&gt;O:_Limit_Needs_Recalculations)
                                            (B:ENGINE_Throttle, percent) #ILDE_ANIM_POS# &gt; if{
                                                #UPPER_LIMIT# (&gt;O:_Upper_Limit)
                                                0 (&gt;O:_Lower_Limit)
                                            } els{
                                                0 (&gt;O:_Upper_Limit)
                                                #LOWER_LIMIT# (&gt;O:_Lower_Limit)
                                            }
                                        } els{
                                            #UPPER_LIMIT# (&gt;O:_Upper_Limit)
                                            #LOWER_LIMIT# (&gt;O:_Lower_Limit)
                                        }
                                    }
                                    0 16384 #LOWER_LIMIT# - (M:DragPercent) #ADJUST_RAW_DRAG_VALUE# * #LOWER_LIMIT# + #UPPER_LIMIT# / (O:_Upper_Limit) min (O:_Lower_Limit) max (&gt;B:ENGINE_Throttle_Set)
                                }
                            }
                        </CALLBACKCODE>
                        <DRAG_ANIM_NAME>lever_throttle</DRAG_ANIM_NAME>
                        <USE_TRAJECTORY_DRAG_MODE>True</USE_TRAJECTORY_DRAG_MODE>
                    </UseTemplate>
                </Component>
                <UseTemplate Name="ASOBO_ENGINE_Push_TOGA_Template">
                    <NODE_ID>PUSH_LEVER_THROTTLE</NODE_ID>
                    <ANIM_NAME>PUSH_LEVER_THROTTLE</ANIM_NAME>
                </UseTemplate>
            </Component>
            <Component ID="ENGINE_Lever_Manual_Override">
                <Component ID="hitbox_LEVER_MAN_OVRD" Node="hitbox_LEVER_MAN_OVRD">
                    <UseInputEvent ID="FUEL">
                        <LEVER_ID>Manual_Override</LEVER_ID>
                        <SET_STATE_EXTERNAL>
                            (O:XMLVAR_ThrottleIsDisconnected) if{
                                (O:FUEL_Manual_Override_Position) @ManualOverrideTreshold &lt;= if{
                                    0 (&gt;O:XMLVAR_ThrottleIsDisconnected)
                                    (B:ENGINE_Throttle_Feathering, Bool) if{
                                        @SetToFeatheredSim
                                        (B:ENGINE_Throttle, percent) 25 &gt; if{ @OpenFuelValve }
                                        15 35 (B:ENGINE_Throttle, percent) rng if{
                                            @SetToConditionPosIdleLO_Code
                                        } els{
                                            (B:ENGINE_Throttle, percent) 25 &gt; if{
                                                @SetToConditionPosIdleHI_Code
                                            } els{
                                                @SetToConditionPosCutoff_Code
                                            }
                                        }
                                    } els{
                                        @SetToUnFeatheredSim
                                        (B:ENGINE_Throttle, percent over 100) 1 (A:THROTTLE LOWER LIMIT, percent over 100) - * (A:THROTTLE LOWER LIMIT, percent over 100) + 16384 * (&gt;K:THROTTLE1_SET)
                                    }
                                } els{
                                    @SetToUnFeatheredSim
                                    (O:FUEL_Manual_Override_Position) @ManualOverrideTreshold - 100 @ManualOverrideTreshold - / 100 * @ConvertTo16k (&gt;K:THROTTLE1_SET)
                                }
                            } els{
                                (O:FUEL_Manual_Override_Position) @ManualOverrideTreshold &gt; if{
                                    1 (&gt;O:XMLVAR_ThrottleIsDisconnected)
                                }
                            }
                        </SET_STATE_EXTERNAL>
                        <GET_STATE_EXTERNAL>(O:FUEL_Manual_Override_Position)</GET_STATE_EXTERNAL>
                        <TT_DESCRIPTION_ID>@TT_Package.FUEL_LEVER_MANUAL_OVERRIDE_ACTION</TT_DESCRIPTION_ID>
                    </UseInputEvent>
                    <UseTemplate Name="ASOBO_GT_Anim_Code">
                        <ANIM_NAME>LEVER_MAN_OVRD</ANIM_NAME>
                        <ANIM_CODE>(B:FUEL_Manual_Override, percent)</ANIM_CODE>
                    </UseTemplate>
                    <UseTemplate Name="ASOBO_GT_Interaction_WheelLeftDrag_Axis">
                        <TOOLTIP_ENTRY_0>FUEL_Manual_Override</TOOLTIP_ENTRY_0>
                        <TOOLTIP_TITLE>@TT_Package.FUEL_LEVER_MANUAL_OVERRIDE_TITLE</TOOLTIP_TITLE>
                        <AXIS>Y</AXIS>
                        <DRAG_ANIM_NAME>LEVER_MAN_OVRD</DRAG_ANIM_NAME>
                        <NO_ARROWS>True</NO_ARROWS>
                        <CURSOR>Grab</CURSOR>
                        <USE_TRAJECTORY_DRAG_MODE>True</USE_TRAJECTORY_DRAG_MODE>
                        <DRAG_CODE>(M:DragPercent) 100 * (&gt;B:FUEL_Manual_Override_Set)</DRAG_CODE>
                        <POSITIVE_AXIS_CODE>1 (&gt;B:FUEL_Manual_Override_Inc)</POSITIVE_AXIS_CODE>
                        <NEGATIVE_AXIS_CODE>1 (&gt;B:FUEL_Manual_Override_Dec)</NEGATIVE_AXIS_CODE>
                    </UseTemplate>
                </Component>
            </Component>
            <CameraTitle>Pedestal</CameraTitle>
        </Component>
        <Component ID="ENGINE_Overhead">
            <UseTemplate Name="ASOBO_ENGINE_Switch_Starter_Template">
                <TYPE>ON_OFF_ABORT</TYPE>
                <ANIM_NAME>enginestart_switch_starter</ANIM_NAME>
                <ANIM_EVENT_EFFECT_NAME>CAM_enginestart_switch_starter</ANIM_EVENT_EFFECT_NAME>
                <DIRECTION>Forward</DIRECTION>
                <NORMALIZED_TIME>0.01</NORMALIZED_TIME>
                <NODE_ID>hitbox_enginestart_switch_starter</NODE_ID>
                <SWITCH_POSITION_VAR>XMLVAR_Starter</SWITCH_POSITION_VAR>
                <SWITCH_POSITION_VAR_TIMER>XMLVAR_Starter_EndTimeDown</SWITCH_POSITION_VAR_TIMER>
                <SWITCH_POSITION_TYPE_ISDOWN>L</SWITCH_POSITION_TYPE_ISDOWN>
                <SWITCH_POSITION_VAR_ISDOWN>XMLVAR_Starter_IsHeld</SWITCH_POSITION_VAR_ISDOWN>
                <ANIMREF_ID>0</ANIMREF_ID>
                <TT_DESCRIPTION_ID>@TT_Package.ENGINE_STARTER_ACTION_SET_1ENG</TT_DESCRIPTION_ID>
            </UseTemplate>
            <UseTemplate Name="ASOBO_ENGINE_Switch_Ignition_Template">
                <ANIM_NAME>enginestart_switch_ignition</ANIM_NAME>
                <NODE_ID>hitbox_enginestart_switch_ignition</NODE_ID>
                <SWITCH_POSITION_TYPE>L</SWITCH_POSITION_TYPE>
                <SWITCH_POSITION_VAR>XMLVAR_Ignition</SWITCH_POSITION_VAR>
                <TT_DESCRIPTION_ID>@TT_Package.ENGINE_IGNITION_ACTION_SET_1ENG</TT_DESCRIPTION_ID>
                <IGNITER_ID>1</IGNITER_ID>
            </UseTemplate>
            <UseTemplate name="ASOBO_GT_ComponentWith_PART_ID">
                <PART_ID>ENGINE_Switch_Ignition</PART_ID>
                <NODE_ID>enginestart_switch_ignition</NODE_ID>
                <!-- Highlight ignition switch (checklist)-->
            </UseTemplate>
            <CameraTitle>Overhead</CameraTitle>
        </Component>

        <!-- AIRCRAFT ################################### -->
        <Component ID="AIRCRAFT">
            <!--
            IRL This needs to be unlocked while using the Handle.
            We cannot do both with a mouse, so instead it can be
            used as a substitute to the handle
            -->
        </Component>

        <!-- FUEL ####################################### -->
        <!--
            Selector operation
            When the system is operated, AUTO SEL CAS message disappears ; the
            sequencer chooses a tank (R or L) and through the actuator, positions the fuel unit
            selector on the selected tank. The sequencer controls the time during which the
            selected tank will operate. This time varies, depending on airplane conditions.
            Airplane on ground : tank is changed every minute and 15 seconds.
            Airplane in flight : tank is changed every five minutes, as long as a fuel low level
            FUEL LOW L or FUEL LOW R CAS message does not appear. When the first
            low level CAS message lights on, the sequencer immediately selects the other tank.
            The selected tank will operate until the second low level CAS message lights on.
            When both low level FUEL LOW L-R CAS messages are visible, the sequencer
            changes tanks every minute and 15 seconds.
        -->
        <Component ID="FUEL_Pedestal">
            <Update Frequency="1">
                (A:GENERAL ENG MIXTURE LEVER POSITION:1, Percent over 100) 0.9 &lt; if{ (&gt;K:MIXTURE1_RICH) }
                (A:FUEL TANK SELECTOR:1, Enum) 1 == if{ (&gt;B:FUEL_Selector_1_Right) }
            </Update>
            <UseTemplate Name="ASOBO_FUEL_Knob_Selector_Template">
                <ANIM_NAME>knob_fuel_tank_selection</ANIM_NAME>
                <NODE_ID>knob_fuel_tank_selection</NODE_ID>
                <INVERT_ANIM>True</INVERT_ANIM>
                <SELECTOR_STATE_0>LEFT</SELECTOR_STATE_0>
                <SELECTOR_STATE_1>RIGHT</SELECTOR_STATE_1>
                <SELECTOR_STATE_2>OFF</SELECTOR_STATE_2>
            </UseTemplate>
            <CameraTitle>Pedestal</CameraTitle>
        </Component>
        <Component ID="FUEL_Overhead">
            <!-- Auto selector update -->
            <UseTemplate Name="ASOBO_GT_Update">
                <UPDATE_CODE>
                    (B:FUEL_Selection, Bool) if{
                        (I:XMLVAR_FuelSelectorAutoTimer) 1 + (&gt;I:XMLVAR_FuelSelectorAutoTimer)
                        75 300 (A:SIM ON GROUND, Bool) ? (I:XMLVAR_FuelSelectorAutoTimer) &lt;= if{
                            (A:FUEL TANK SELECTOR:1, Enum) 0 != if{
                                (A:FUEL LEFT QUANTITY, gallons) (A:FUEL RIGHT QUANTITY, gallons) &gt;
                                if{ (&gt;B:FUEL_Selector_1_Left) }
                                els{ (&gt;B:FUEL_Selector_1_Right) }
                            }
                            0 (&gt;I:XMLVAR_FuelSelectorAutoTimer)
                        }
                    }
                </UPDATE_CODE>
                <FREQUENCY>1</FREQUENCY>
            </UseTemplate>

            <UseTemplate Name="ASOBO_FUEL_Switch_Pump_Template">
                <SWITCH_TYPE>OFF_AUTO_ON</SWITCH_TYPE>
                <STATE_AUTO>0</STATE_AUTO>
                <STATE_ON>1</STATE_ON>
                <STATE_OFF>2</STATE_OFF>
                <PART_ID>FUEL_Switch_AUXBP</PART_ID>
                <NODE_ID>FUEL_Switch_AUXBP</NODE_ID>
                <ANIM_NAME>FUEL_Switch_AUXBP</ANIM_NAME>
                <SWITCH_POSITION_TYPE>L</SWITCH_POSITION_TYPE>
                <SWITCH_POSITION_VAR>XMLVAR_BoostFuelPump</SWITCH_POSITION_VAR>
            </UseTemplate>

            <Component ID="FUEL_Push_Small" Node="fuel_push_small">
                <Parameters Type="Override">
                    <BTN_ID>Select_Heavier</BTN_ID>
                </Parameters>
                <UseInputEvent ID="FUEL">
                    <SET_STATE_EXTERNAL>p0 if{ (A:FUEL TANK SELECTOR:1, Enum) 2 == if{ (&gt;K:FUEL_SELECTOR_RIGHT) } els{ (&gt;K:FUEL_SELECTOR_LEFT) } 0 (&gt;I:XMLVAR_FuelSelectorAutoTimer) }</SET_STATE_EXTERNAL>
                    <BINDING_INC_0>Push</BINDING_INC_0>
                    <BINDING_INC_0_PARAM_0>1</BINDING_INC_0_PARAM_0>
                    <TT_DESCRIPTION_ID>@TT_Package.FUEL_PUSH_SMALL_ACTION</TT_DESCRIPTION_ID>
                </UseInputEvent>
                <UseTemplate Name="ASOBO_GT_Push_Button">
                    <TOOLTIP_TITLE>@TT_Package.FUEL_PUSH_SMALL_TITLE</TOOLTIP_TITLE>
                    <TOOLTIP_ENTRY_0>FUEL_#BTN_ID#</TOOLTIP_ENTRY_0>
                    <PART_ID>FUEL_Push_Small</PART_ID>
                    <ANIM_NAME>fuel_push_small</ANIM_NAME>
                    <LEFT_SINGLE_CODE>(&gt;B:FUEL_#BTN_ID#_Push)</LEFT_SINGLE_CODE>
                    <WWISE_EVENT_1>fuel_push_button_on</WWISE_EVENT_1>
                    <WWISE_EVENT_2>fuel_push_button_off</WWISE_EVENT_2>
                </UseTemplate>
            </Component>

            <Component ID="FUEL_Switch_Selector" Node="fuel_push_fuelsel">
                <Parameters Type="Override">
                    <BTN_ID>Selection</BTN_ID>
                </Parameters>
                <UseInputEvent ID="FUEL">
                    <ANIM>EXTERNAL</ANIM>
                    <SET_STATE_EXTERNAL>p0 (&gt;O:XMLVAR_FUEL_Selection_Is_Auto)</SET_STATE_EXTERNAL>
                    <GET_STATE_EXTERNAL>(O:XMLVAR_FUEL_Selection_Is_Auto) sp0</GET_STATE_EXTERNAL>
                    <SIM_STATE_IS_ON_EXTERNAL>l0</SIM_STATE_IS_ON_EXTERNAL>
                    <STR_STATE_ON>Auto</STR_STATE_ON>
                    <STR_STATE_OFF>Manual</STR_STATE_OFF>
                    <TT_VALUE_ON>(R:1:@TT_Package.GT_STATE_AUTO)</TT_VALUE_ON>
                    <TT_VALUE_OFF>(R:1:@TT_Package.GT_STATE_MANUAL)</TT_VALUE_OFF>
                    <TT_DESCRIPTION_ID>@TT_Package.FUEL_SWITCH_SELECTOR_AUTO_MAN_ACTION</TT_DESCRIPTION_ID>
                </UseInputEvent>
                <UseTemplate Name="ASOBO_GT_Update">
                    <UPDATE_ONCE>True</UPDATE_ONCE>
                    <UPDATE_CODE>(L:XMLVAR_FuelSelectorAuto) if{ (&gt;B:FUEL_#BTN_ID#_Auto, Bool) }</UPDATE_CODE>
                </UseTemplate>
                <UseTemplate Name="ASOBO_GT_Switch_Code">
                    <TOOLTIP_TITLE>@TT_Package.FUEL_SWITCH_SELECTOR_AUTO_MAN_TITLE</TOOLTIP_TITLE>
                    <TOOLTIP_ENTRY_0>FUEL_Selection</TOOLTIP_ENTRY_0>
                    <PART_ID>FUEL_Switch_Selector</PART_ID>
                    <ANIM_NAME>fuel_push_fuelsel</ANIM_NAME>
                    <ANIM_CODE>(B:FUEL_#BTN_ID#, Bool) 100 *</ANIM_CODE>
                    <LEFT_SINGLE_CODE>(&gt;B:FUEL_#BTN_ID#_Toggle)</LEFT_SINGLE_CODE>
                    <WWISE_EVENT_1>fuel_fuelsel_switch_on</WWISE_EVENT_1>
                    <WWISE_EVENT_2>fuel_fuelsel_switch_off</WWISE_EVENT_2>
                </UseTemplate>
            </Component>

            <CameraTitle>Overhead</CameraTitle>
        </Component>

        <!-- LIGHTING ################################### -->
        <Component ID="LIGHTING_Ambience">
            <DefaultTemplateParameters>
                <DIMMING_SCALE>(B:LIGHTING_Dimmer_light, Bool) if{ 0.2 } els{ 1 }</DIMMING_SCALE>
            </DefaultTemplateParameters>
            <UseTemplate Name="ASOBO_LIGHTING_Ambient_Template">
                <BOUNCE_POTENTIOMETER_PERCENT>
                    (A:LIGHT CABIN, Bool) 0.65 * (A:LIGHT POTENTIOMETER:5, Percent) *
                    (A:LIGHT CABIN, Bool) 0.35 * (A:LIGHT POTENTIOMETER:4, Percent) #DIMMING_SCALE# * * +
                </BOUNCE_POTENTIOMETER_PERCENT>
                <POTENTIOMETER>14</POTENTIOMETER>
                <ID>1</ID>
            </UseTemplate>
            <UseTemplate Name="ASOBO_LIGHTING_Ambient_Template">
                    <BOUNCE_POTENTIOMETER_PERCENT>
                    (A:LIGHT CABIN, Bool) 0.40 * (A:LIGHT POTENTIOMETER:6, Percent) *
                    (A:LIGHT CABIN, Bool) 0.40 * (A:LIGHT POTENTIOMETER:7, Percent) * +
                    (A:LIGHT CABIN, Bool) 0.20 * (A:LIGHT POTENTIOMETER:8, Percent) * +
                </BOUNCE_POTENTIOMETER_PERCENT>
                <POTENTIOMETER>15</POTENTIOMETER>
                <ID>2</ID>
            </UseTemplate>
            <UseTemplate Name="ASOBO_LIGHTING_Ambient_Template">
                <BOUNCE_POTENTIOMETER_PERCENT> <!-- #DIMMING_SCALE# * -->
                    (L:XMLVAR_AS3000_DisplayLightingBool, bool) if{
                        (L:XMLVAR_AS3000_DisplayLighting) 9000 * (L:AS3000_PFD_1_ScreenLuminosity) * 
                    } els{
                        (L:AS3000_Brightness, Percent over 100) 9000 * (L:AS3000_PFD_1_ScreenLuminosity) *
                    }
                    (L:AS3000_PFD_1_ScreenLuminosity) 10 * +
                </BOUNCE_POTENTIOMETER_PERCENT>
                <POTENTIOMETER>16</POTENTIOMETER>
                <ID>3</ID>
            </UseTemplate>
            <UseTemplate Name="ASOBO_LIGHTING_Ambient_Template">
                <BOUNCE_POTENTIOMETER_PERCENT>
                    (L:XMLVAR_AS3000_DisplayLightingBool, bool) if{
                        (L:XMLVAR_AS3000_DisplayLighting) 90 * (L:AS3000_MFD_ScreenLuminosity) * #DIMMING_SCALE# *
                    } els{
                        (L:AS3000_Brightness, Percent over 100) 90 * (L:AS3000_MFD_ScreenLuminosity) * #DIMMING_SCALE# *
                    }
                    (L:AS3000_MFD_ScreenLuminosity) 10 * +
                </BOUNCE_POTENTIOMETER_PERCENT>
                <POTENTIOMETER>17</POTENTIOMETER>
                <ID>4</ID>
            </UseTemplate>
        </Component>

        <Component ID="LIGHTING_Panel_Static">
            <DefaultTemplateParameters>
                <EMISSIVE_CODE>@PanelStaticEmissiveCode</EMISSIVE_CODE>
                <POTENTIOMETER>1</POTENTIOMETER>
            </DefaultTemplateParameters>
            <UseTemplate Name="ASOBO_LIGHTING_Cabin_Emissive_Template">
                <NODE_ID>intlights_knob_panel_text</NODE_ID>
            </UseTemplate>
            <UseTemplate Name="ASOBO_LIGHTING_Cabin_Emissive_Template">
                <NODE_ID>cylinder_compass</NODE_ID>
            </UseTemplate>
            <UseTemplate Name="ASOBO_LIGHTING_Cabin_Emissive_Template">
                <NODE_ID>ELT_PUSH_ELT_text</NODE_ID>
            </UseTemplate>
            <UseTemplate Name="ASOBO_LIGHTING_Cabin_Emissive_Template">
                <NODE_ID>ELECSTINSTRU_KNOB_text</NODE_ID>
            </UseTemplate>
            <UseTemplate Name="ASOBO_LIGHTING_Cabin_Emissive_Template">
                <NODE_ID>AC_KNOB_FAN_text</NODE_ID>
            </UseTemplate>
            <UseTemplate Name="ASOBO_LIGHTING_Cabin_Emissive_Template">
                <NODE_ID>AC_KNOB_TEMP_text</NODE_ID>
            </UseTemplate>
            <UseTemplate Name="ASOBO_LIGHTING_Cabin_Emissive_Template">
                <NODE_ID>PARKBRAKE_KNOB_L_text</NODE_ID>
            </UseTemplate>
            <UseTemplate Name="ASOBO_LIGHTING_Cabin_Emissive_Template">
                <NODE_ID>HOTAIRFLOW_KNOB_text</NODE_ID>
            </UseTemplate>
            <UseTemplate Name="ASOBO_LIGHTING_Cabin_Emissive_Template">
                <NODE_ID>PUSH_AIL_TRIM_text</NODE_ID>
            </UseTemplate>
            <UseTemplate Name="ASOBO_LIGHTING_Cabin_Emissive_Template">
                <NODE_ID>KNOB_FUEL_TANK_SELECTION_TEXT</NODE_ID>
            </UseTemplate>
            <UseTemplate Name="ASOBO_LIGHTING_Cabin_Emissive_Template">
                <NODE_ID>CREWMUSIC_KNOB_SOURCE_text</NODE_ID>
            </UseTemplate>
        </Component>

        <Component ID="LIGHTING_Overhead">
            <Component ID="Pulselite_Sytem">
                <Parameters Type="Override">
                    <ON_STATE_CHANGED_EXTERNAL_CODE>
                        (A:LIGHT LANDING, Bool) if{
                            100 (&gt;K:LIGHT_POTENTIOMETER_10_SET)
                            100 (&gt;K:LIGHT_POTENTIOMETER_2_SET)
                            0 (&gt;K:LIGHT_POTENTIOMETER_3_SET)
                        } els{
                            (A:LIGHT LOGO, Bool) if{
                                0 (&gt;K:LIGHT_POTENTIOMETER_10_SET)
                                0 (&gt;K:LIGHT_POTENTIOMETER_2_SET)
                                100 (&gt;K:LIGHT_POTENTIOMETER_3_SET)
                            } els{
                                (A:LIGHT TAXI, Bool) if{
                                    0 (&gt;K:LIGHT_POTENTIOMETER_10_SET)
                                    100 (&gt;K:LIGHT_POTENTIOMETER_2_SET)
                                    0 (&gt;K:LIGHT_POTENTIOMETER_3_SET)
                                }
                            }
                        }
                    </ON_STATE_CHANGED_EXTERNAL_CODE>
                </Parameters>
                <UseTemplate Name="TBM930_LIGHTING_Switches_Light_Pulse_Landing_Template">
                    <TYPE>PULSE_LANDING_TAXI_OFF</TYPE>
                    <LIGHT_TYPE_PULSE>LOGO</LIGHT_TYPE_PULSE>
                    <ANIMTIP_0_LANDING_TAXI_OFF>TT:COCKPIT.TOOLTIPS.TBM_LANDING_LIGHT_ON</ANIMTIP_0_LANDING_TAXI_OFF>
                    <ANIMTIP_1_LANDING_TAXI_OFF>TT:COCKPIT.TOOLTIPS.TBM_TAXI_LIGHT_ON</ANIMTIP_1_LANDING_TAXI_OFF>
                    <ANIMTIP_2_LANDING_TAXI_OFF>TT:COCKPIT.TOOLTIPS.TBM_TAXI_LIGHT_OFF</ANIMTIP_2_LANDING_TAXI_OFF>
                    <WWISE_EVENT_LANDING_TAXI_OFF>taxi_light_switch</WWISE_EVENT_LANDING_TAXI_OFF>
                    <WWISE_EVENT_1_PULSE>pulse_light_switch_on</WWISE_EVENT_1_PULSE>
                    <WWISE_EVENT_2_PULSE>pulse_light_switch_off</WWISE_EVENT_2_PULSE>
                    <PART_ID_PULSE>LIGHTING_Push_Pulse</PART_ID_PULSE>
                    <PART_ID_LANDING_TAXI_OFF>EXTERIOR_LIGHTS_Switch_Taxi</PART_ID_LANDING_TAXI_OFF>
                    <ANIM_NAME_PULSE>extlights_push_pulse</ANIM_NAME_PULSE>
                    <ANIM_NAME_LANDING_TAXI_OFF>extlights_switch_taxi</ANIM_NAME_LANDING_TAXI_OFF>
                    <NODE_ID_PULSE>extlights_push_pulse</NODE_ID_PULSE>
                    <NODE_ID_LANDING_TAXI_OFF>extlights_switch_taxi</NODE_ID_LANDING_TAXI_OFF>
                </UseTemplate>
                
                <UseTemplate Name="ASOBO_LIGHTING_Switch_Light_Logo_Template">
                    <NODE_ID>extlights_push_pulse</NODE_ID>
                    <ANIM_NAME>extlights_push_pulse</ANIM_NAME>
                    <PART_ID>LIGHTING_Push_Pulse</PART_ID>
                    <TOOLTIP_TITLE>@TT_Package.LIGHTING_SWITCH_LIGHT_PULSE_TITLE</TOOLTIP_TITLE>
                    <TT_DESCRIPTION_ID>@TT_Package.LIGHTING_SWITCH_LIGHT_PULSE_ACTION</TT_DESCRIPTION_ID>
                </UseTemplate>
            </Component>

            <Update Frequency="5">
                (A:LIGHT NAV, Bool)
                (A:LIGHT STROBE, Bool) or !
                (A:LIGHT RECOGNITION, Bool) != if{
                    (&gt;K:TOGGLE_RECOGNITION_LIGHTS)
                }
            </Update>
            <UseTemplate Name="ASOBO_LIGHTING_Switch_Light_Navigation_Template">
                <ANIM_NAME>extlights_push_nav</ANIM_NAME>
                <NODE_ID>extlights_push_nav</NODE_ID>
                <TOOLTIP_TITLE>@TT_Package.LIGHTING_SWITCH_LIGHT_NAV_TITLE</TOOLTIP_TITLE>
                <TT_DESCRIPTION_ID>@TT_Package.LIGHTING_SWITCH_LIGHT_NAV_ACTION_SET</TT_DESCRIPTION_ID>
            </UseTemplate>
            <UseTemplate Name="ASOBO_LIGHTING_Switch_Light_Strobe_Template">
                <ANIM_NAME>extlights_push_strobe</ANIM_NAME>
                <NODE_ID>extlights_push_strobe</NODE_ID>
                <!-- Declare another PartID for extlights_push_strobe node -->
                <OTHER_PART_ID>LIGHTING_Switch_Light_Beacon</OTHER_PART_ID>
                <TOOLTIP_TITLE>@TT_Package.LIGHTING_SWITCH_LIGHT_STROBE_TITLE</TOOLTIP_TITLE>
                <TT_DESCRIPTION_ID>@TT_Package.LIGHTING_SWITCH_LIGHT_STROBE_ACTION</TT_DESCRIPTION_ID>
            </UseTemplate>
            <UseTemplate Name="ASOBO_LIGHTING_Cabin_Emissive_Template">
                <NODE_ID>light_pedestal</NODE_ID>
                <POTENTIOMETER>8</POTENTIOMETER>
            </UseTemplate>
            <UseTemplate Name="ASOBO_LIGHTING_Panel_Emissive_Template">
                <POTENTIOMETER>4</POTENTIOMETER>
                <NODE_ID>cockpit_texts</NODE_ID>
                <EMISSIVE_CODE>@PanelEmissiveCode</EMISSIVE_CODE>
            </UseTemplate>
            <UseTemplate Name="ASOBO_LIGHTING_Panel_Emissive_Template">
                <POTENTIOMETER>4</POTENTIOMETER>
                <NODE_ID>decal_elt</NODE_ID>
                <EMISSIVE_CODE>@PanelEmissiveCode</EMISSIVE_CODE>
            </UseTemplate>
            <UseTemplate Name="ASOBO_LIGHTING_Toggle_Var_Template">
                <IE_VAR_ID>Dimmer_light</IE_VAR_ID>
                <NODE_ID>intlights_push_dimmer</NODE_ID>
                <ANIM_NAME>intlights_push_dimmer</ANIM_NAME>
                <PART_ID>intlights_push_dimmer</PART_ID>
                <TT_DESCRIPTION_ID>@TT_Package.LIGHTING_SWITCH_DIMMER_LIGHT_ACTION</TT_DESCRIPTION_ID>
                <TOOLTIP_TITLE>@TT_Package.LIGHTING_SWITCH_DIMMER_LIGHT_TITLE</TOOLTIP_TITLE>
            </UseTemplate>
            <UseTemplate Name="ASOBO_LIGHTING_Toggle_Var_Template">
                <IE_VAR_ID>Cabin_Light</IE_VAR_ID>
                <NODE_ID>intlights_push_cabin</NODE_ID>
                <ANIM_NAME>intlights_push_cabin</ANIM_NAME>
                <PART_ID>intlights_push_cabin</PART_ID>
                <ON_STATE_CHANGED_EXTERNAL_CODE>(O:LIGHTING_Cabin_Light_position) (A:LIGHT CABIN, Bool) ! and if{ 1 (&gt;K:CABIN_LIGHTS_SET) }</ON_STATE_CHANGED_EXTERNAL_CODE>
                <TT_DESCRIPTION_ID>@TT_Package.LIGHTING_SWITCH_CABIN_ACTION_SET</TT_DESCRIPTION_ID>
                <TOOLTIP_TITLE>@TT_Package.LIGHTING_SWITCH_CABIN_TITLE</TOOLTIP_TITLE>
            </UseTemplate>
            <UseTemplate Name="ASOBO_LIGHTING_Toggle_Var_Template">
                <IE_VAR_ID>Access_Light</IE_VAR_ID>
                <NODE_ID>intlights_push_access</NODE_ID>
                <ANIM_NAME>intlights_push_access</ANIM_NAME>
                <PART_ID>intlights_push_access</PART_ID>
                <ON_STATE_CHANGED_EXTERNAL_CODE>(O:LIGHTING_Access_Light_position) (A:LIGHT CABIN, Bool) ! and if{ 1 (&gt;K:CABIN_LIGHTS_SET) }</ON_STATE_CHANGED_EXTERNAL_CODE>
                <TT_DESCRIPTION_ID>@TT_Package.LIGHTING_SWITCH_ACCESS_LIGHT_ACTION</TT_DESCRIPTION_ID>
                <TOOLTIP_TITLE>@TT_Package.LIGHTING_SWITCH_ACCESS_LIGHT_TITLE</TOOLTIP_TITLE>
            </UseTemplate>
            <UseTemplate Name="ASOBO_SAFETY_Switch_ELT_Template">
                <NODE_ID>elt_push_elt</NODE_ID>
                <ANIM_NAME>elt_push_elt</ANIM_NAME>
                <EMISSIVE_NODE_ID>annunciator_ELT</EMISSIVE_NODE_ID>
            </UseTemplate>
            <!-- Sets the light intensity control to the potentiometer index 1 -->
            <Component ID="LIGHTING_Knob_Panel" Node="intlights_knob_panel">
                <UseInputEvent ID="LIGHTING">
                    <KNOB_ID>Panel_Light</KNOB_ID>
                    <SET_STATE_EXTERNAL>
                        p0 0 &gt; if{
                            (A:LIGHT POTENTIOMETER:4, Percent) 0 &gt; if{ 4 (&gt;K:LIGHT_POTENTIOMETER_DEC) }
                            (A:LIGHT PANEL, Bool) ! (A:LIGHT POTENTIOMETER:4, Percent) 5 &gt; and if{
                                1 (&gt;K:PANEL_LIGHTS_SET)
                        }
                        (A:LIGHT PANEL, Bool) (A:LIGHT POTENTIOMETER:4, Percent) 5 &lt; and if{
                            0 (&gt;K:PANEL_LIGHTS_SET)
                        }
                        } els{
                            (A:LIGHT POTENTIOMETER:4, Percent) 100 &lt; if{ 4 (&gt;K:LIGHT_POTENTIOMETER_INC) }
                            (A:LIGHT PANEL, Bool) ! (A:LIGHT POTENTIOMETER:4, Percent) 5 &gt; and if{
                                1 (&gt;K:PANEL_LIGHTS_SET)
                            }
                        }
                    </SET_STATE_EXTERNAL>
                    <TT_VALUE>(A:LIGHT PANEL, Bool) if{ (A:LIGHT POTENTIOMETER:4, Percent) '%d%%' @sprintf } els{ (R:1:@TT_Package.GT_STATE_OFF) }</TT_VALUE>
                    <TT_VALUE_IS_DYNAMIC>True</TT_VALUE_IS_DYNAMIC>
                    <TT_DESCRIPTION_ID>@TT_Package.LIGHTING_KNOB_PANEL_ACTION</TT_DESCRIPTION_ID>
                </UseInputEvent>
                <UseTemplate Name="ASOBO_GT_Update">
                    <UPDATE_ONCE>True</UPDATE_ONCE>
                    <UPDATE_CODE>
                        100 0 (A:LIGHT PANEL, Bool) ? 4 (&gt;K:2:LIGHT_POTENTIOMETER_SET)
                    </UPDATE_CODE>
                </UseTemplate>
                <UseTemplate Name="ASOBO_GT_Knob_Finite_Code">
                    <TOOLTIP_TITLE>@TT_Package.LIGHTING_KNOB_PANEL_TITLE</TOOLTIP_TITLE>
                    <TOOLTIP_ENTRY_0>LIGHTING_Panel_Light</TOOLTIP_ENTRY_0>
                    <WRAP>False</WRAP>
                    <PART_ID>INTERIOR_LIGHTS_Knob_Panel</PART_ID>
                    <ANIM_CODE>(A:LIGHT POTENTIOMETER:4, Percent)</ANIM_CODE>
                    <ANIM_NAME>intlights_knob_panel</ANIM_NAME>
                    <ANIMCURSOR_DIR>-1.0</ANIMCURSOR_DIR>
                    <ANTICLOCKWISE_CODE>1 (&gt;B:LIGHTING_Panel_Light_Dec)</ANTICLOCKWISE_CODE>
                    <CLOCKWISE_CODE>1 (&gt;B:LIGHTING_Panel_Light_Inc)</CLOCKWISE_CODE>
                    <WWISE_EVENT>intlights_knob</WWISE_EVENT>
                    <COUNT>28</COUNT>
                </UseTemplate>
            </Component>
            <Component ID="LIGHTING_Copilot_Light">
                <UseTemplate Name="ASOBO_GT_Update">
                    <FREQUENCY>5</FREQUENCY>
                    <UPDATE_CODE>(B:LIGHTING_Copilot_Light, Bool) 100 * (&gt;K:LIGHT_POTENTIOMETER_6_SET)</UPDATE_CODE>
                </UseTemplate>
                <UseTemplate Name="ASOBO_LIGHTING_Toggle_Var_Template">
                    <IE_VAR_ID>Copilot_Light</IE_VAR_ID>
                    <NODE_ID>push_light_copilot</NODE_ID>
                    <ANIM_NAME>push_light_copilot</ANIM_NAME>
                    <ON_STATE_CHANGED_EXTERNAL_CODE>(O:LIGHTING_Copilot_Light_position) (A:LIGHT CABIN, Bool) ! and if{ 1 (&gt;K:CABIN_LIGHTS_SET) }</ON_STATE_CHANGED_EXTERNAL_CODE>
                    <TT_DESCRIPTION_ID>@TT_Package.LIGHTING_SWITCH_LIGHT_OVERHEAD_COPILOT_ACTION</TT_DESCRIPTION_ID>
                    <TOOLTIP_TITLE>@TT_Package.LIGHTING_SWITCH_LIGHT_OVERHEAD_COPILOT_TITLE</TOOLTIP_TITLE>
                    <WWISE_EVENT_1>push_light_top_switch_on</WWISE_EVENT_1>
                    <WWISE_EVENT_2>push_light_top_switch_off</WWISE_EVENT_2>
                </UseTemplate>
                <Component ID="LIGHTING_Light_Copilot_Text" Node="light_copilot">
                    <UseTemplate Name="ASOBO_GT_Emissive_Gauge">
                        <EMISSIVE_CODE>(A:LIGHT CABIN, Bool) (A:LIGHT CABIN ON, Bool) and (A:LIGHT POTENTIOMETER:6, Percent) and</EMISSIVE_CODE>
                    </UseTemplate>
                </Component>
            </Component>
            <Component ID="LIGHTING_Pilot_Light">
                <UseTemplate Name="ASOBO_GT_Update">
                    <FREQUENCY>5</FREQUENCY>
                    <UPDATE_CODE>(B:LIGHTING_Pilot_Light, Bool) 100 * (&gt;K:LIGHT_POTENTIOMETER_7_SET)</UPDATE_CODE>
                </UseTemplate>
                <UseTemplate Name="ASOBO_LIGHTING_Toggle_Var_Template">
                    <IE_VAR_ID>Pilot_Light</IE_VAR_ID>
                    <NODE_ID>push_light_pilot</NODE_ID>
                    <ANIM_NAME>push_light_pilot</ANIM_NAME>
                    <ON_STATE_CHANGED_EXTERNAL_CODE>(O:LIGHTING_Pilot_Light_position) (A:LIGHT CABIN, Bool) ! and if{ 1 (&gt;K:CABIN_LIGHTS_SET) }</ON_STATE_CHANGED_EXTERNAL_CODE>
                    <TT_DESCRIPTION_ID>@TT_Package.LIGHTING_SWITCH_LIGHT_OVERHEAD_PILOT_ACTION</TT_DESCRIPTION_ID>
                    <TOOLTIP_TITLE>@TT_Package.LIGHTING_SWITCH_LIGHT_OVERHEAD_PILOT_TITLE</TOOLTIP_TITLE>
                    <WWISE_EVENT_1>push_light_top_switch_on</WWISE_EVENT_1>
                    <WWISE_EVENT_2>push_light_top_switch_off</WWISE_EVENT_2>
                    <TT_ICON>PUSH</TT_ICON>
                </UseTemplate>
                <Component ID="LIGHTING_Light_Pilot_Text" Node="light_pilot">
                    <UseTemplate Name="ASOBO_GT_Emissive_Gauge">
                        <EMISSIVE_CODE>(A:LIGHT CABIN, Bool) (A:LIGHT CABIN ON, Bool) and (A:LIGHT POTENTIOMETER:7, Percent) and</EMISSIVE_CODE>
                    </UseTemplate>
                </Component>
            </Component>
            <Component ID="LIGHTING_Toggle_CabinLights" Node="CABIN_LIGHTS">
                <PartId>LIGHTING_Toggle_CabinLights</PartId>
                <UseTemplate Name="ASOBO_GT_Update">
                    <FREQUENCY>5</FREQUENCY>
                    <UPDATE_CODE>(B:LIGHTING_Cabin_Light, Bool) 100 * (&gt;K:LIGHT_POTENTIOMETER_5_SET)</UPDATE_CODE>
                </UseTemplate>
                <UseTemplate Name="ASOBO_GT_Update">
                    <UPDATE_ONCE>True</UPDATE_ONCE>
                    <UPDATE_CODE>
                        (A:LIGHT CABIN, Bool) 100 * (&gt;K:LIGHT_POTENTIOMETER_5_SET)
                        (A:LIGHT CABIN, Bool) 100 * (&gt;K:LIGHT_POTENTIOMETER_6_SET)
                        (A:LIGHT CABIN, Bool) 100 * (&gt;K:LIGHT_POTENTIOMETER_7_SET)
                    </UPDATE_CODE>
                </UseTemplate>
                <UseTemplate Name="ASOBO_GT_Update">
                    <FREQUENCY>5</FREQUENCY>
                    <UPDATE_CODE>(A:LIGHT CABIN, Bool) ! (B:LIGHTING_Cabin_Light, Bool) (B:LIGHTING_Access_Light, Bool) or and if{ (&gt;B:LIGHTING_Cabin_Light_Off) (&gt;B:LIGHTING_Access_Light_Off) }</UPDATE_CODE>
                </UseTemplate>
                <UseTemplate Name="ASOBO_GT_Emissive_Gauge">
                    <EMISSIVE_CODE>(A:LIGHT CABIN, Bool) (A:LIGHT CABIN ON, Bool) and (A:LIGHT POTENTIOMETER:5, Percent) and</EMISSIVE_CODE>
                </UseTemplate>
            </Component>
            <Component ID="LIGHTING_Toggle_AccessLights" Node="ACCESS_LIGHTS">
                <UseTemplate Name="ASOBO_GT_Update">
                    <FREQUENCY>5</FREQUENCY>
                    <UPDATE_CODE>(B:LIGHTING_Access_Light, Bool) 100 * (&gt;K:LIGHT_POTENTIOMETER_8_SET)</UPDATE_CODE>
                </UseTemplate>
                <PartId>LIGHTING_Toggle_AccessLights</PartId>
                <UseTemplate Name="ASOBO_GT_Emissive_Gauge">
                    <EMISSIVE_CODE>(A:LIGHT CABIN, Bool) (A:LIGHT CABIN ON, Bool) and (A:LIGHT POTENTIOMETER:8, Percent) and</EMISSIVE_CODE>
                </UseTemplate>
            </Component>
            <Component ID="LIGHTING_Toggle_CabinOrAccessLights" Node="CABIN_OR_ACCESS_LIGHTS">
                <UseTemplate Name="ASOBO_GT_Update">
                    <FREQUENCY>5</FREQUENCY>
                    <UPDATE_CODE>(B:LIGHTING_Cabin_Light, Bool) (B:LIGHTING_Access_Light, Bool) or 100 * (&gt;K:LIGHT_POTENTIOMETER_9_SET)</UPDATE_CODE>
                </UseTemplate>
                <PartId>LIGHTING_Toggle_CabinLights</PartId>
                <PartId>LIGHTING_Toggle_AccessLights</PartId>
                <UseTemplate Name="ASOBO_GT_Emissive_Gauge">
                    <EMISSIVE_CODE>(A:LIGHT CABIN, Bool) (A:LIGHT CABIN ON, Bool) and (A:LIGHT POTENTIOMETER:9, Percent) and</EMISSIVE_CODE>
                </UseTemplate>
            </Component>
            <Component ID="LIGHTING_Update_ScreenLights">
                <UseTemplate Name="ASOBO_GT_Update">
                    <FREQUENCY>5</FREQUENCY>
                    <UPDATE_CODE>(L:AS3000_Brightness, number) (A:CIRCUIT GENERAL PANEL ON, Bool) * 100 * (&gt;K:LIGHT_POTENTIOMETER_12_SET)</UPDATE_CODE>
                </UseTemplate>
                <PartId>LIGHTING_Toggle_CabinLights</PartId>
                <PartId>LIGHTING_Toggle_AccessLights</PartId>
                <UseTemplate Name="ASOBO_GT_Emissive_Gauge">
                    <EMISSIVE_CODE>(A:LIGHT CABIN, Bool) (A:LIGHT CABIN ON, Bool) and (A:LIGHT POTENTIOMETER:9, Percent) and</EMISSIVE_CODE>
                </UseTemplate>
            </Component>
            <CameraTitle>Overhead</CameraTitle>
        </Component>
        <Component ID="LIGHTING_Lights">
            <UseTemplate Name="ASOBO_LIGHTING_Switch_Light_Wing_Template">
                <ANIM_NAME>DEICESYSTEM_SWITCH_LIGHT_WING</ANIM_NAME>
                <PART_ID>DEICE_Switch_Light</PART_ID>
                <NODE_ID>DEICESYSTEM_SWITCH_LIGHT_WING</NODE_ID>
                <TOOLTIP_TITLE>@TT_Package.LIGHTING_SWITCH_LIGHT_ICE_TITLE</TOOLTIP_TITLE>
                <TT_DESCRIPTION_ID>@TT_Package.LIGHTING_SWITCH_LIGHT_ICE_ACTION_SET</TT_DESCRIPTION_ID>
            </UseTemplate>
            <CameraTitle>PFD</CameraTitle>
        </Component>
        <!--
            Ressources :
            http://www.tbm.aero/wp-content/uploads/2016/03/PIM-930__AN__E0R0.pdf
                p.394
            https://www.youtube.com/watch?v=jGDRKirYeHo
                5 premieres minutes
        -->

        <!-- ELECTRICAL ################################# -->
        <Component ID="ELECTRICAL">
            <UseTemplate Name="ASOBO_GT_Update">
                <UPDATE_ONCE>True</UPDATE_ONCE>
                <UPDATE_CODE>(A:ELECTRICAL MASTER BATTERY, Bool) ! (&gt;B:ELECTRICAL_Crash_Lever_Set) (&gt;B:ENGINE_Starter_1_Off)</UPDATE_CODE>
            </UseTemplate>
            <UseTemplate Name="ASOBO_GT_Update">
                <FREQUENCY>5</FREQUENCY>
                <UPDATE_CODE>(B:ELECTRICAL_Crash_Lever, Bool) sp0 (B:ELECTRICAL_Battery_1) 2 != l0 and (B:ELECTRICAL_Alternator_1) 2 != l0 and or if{ (&gt;B:ELECTRICAL_Crash_Lever_Up) }</UPDATE_CODE>
            </UseTemplate>
            <UseTemplate Name="ASOBO_ELECTRICAL_Switch_Battery_Master_Template">
                <SWITCH_TYPE>GPU_BATT_OFF</SWITCH_TYPE>
                <NODE_ID>electricpower_switch_source</NODE_ID>
                <ANIM_NAME>electricpower_switch_source</ANIM_NAME>
                <CODE_POS_0_VERIF>(B:ELECTRICAL_Crash_Lever, Bool) !</CODE_POS_0_VERIF>
                <CODE_POS_1_VERIF>(B:ELECTRICAL_Crash_Lever, Bool) !</CODE_POS_1_VERIF>
                <PART_ID>ELECTRICAL_Switch_Source</PART_ID>
                <THRESHOLD_MOUSE>0.01</THRESHOLD_MOUSE>
                <TT_DESCRIPTION_ID>@TT_Package.ELECTRICAL_SWITCH_SOURCE_ACTION_SET</TT_DESCRIPTION_ID>
                <TOOLTIP_TITLE>@TT_Package.ELECTRICAL_SWITCH_SOURCE_TITLE</TOOLTIP_TITLE>
            </UseTemplate>
            <UseTemplate Name="ASOBO_ELECTRICAL_Switch_Alternator_Template">
                <TYPE>STBY_MAIN_OFF</TYPE>
                <NODE_ID>electricpower_switch_generator</NODE_ID>
                <ANIM_NAME>electricpower_switch_generator</ANIM_NAME>
                <CODE_POS_0_VERIF>(B:ELECTRICAL_Crash_Lever, Bool) !</CODE_POS_0_VERIF>
                <CODE_POS_1_VERIF>(B:ELECTRICAL_Crash_Lever, Bool) !</CODE_POS_1_VERIF>
                <PART_ID>ELECTRICAL_Switch_Generator</PART_ID>
                <THRESHOLD_MOUSE>0.01</THRESHOLD_MOUSE>
                <TT_DESCRIPTION_ID>@TT_Package.ELECTRICAL_SWITCH_GENERATOR_ACTION_SET</TT_DESCRIPTION_ID>
                <TOOLTIP_TITLE>@TT_Package.ELECTRICAL_SWITCH_GENERATOR_TITLE</TOOLTIP_TITLE>
            </UseTemplate>
            <Component ID="ELECTRICAL_Lever_GeneratorReset" Node="hitbox_electricpower_lever_generatorreset">
                <UseInputEvent ID="ELECTRICAL">
                    <BTN_ID>Crash_Lever</BTN_ID>
                    <INPUT_EVENT_ID_SOURCE>ELECTRICAL</INPUT_EVENT_ID_SOURCE>
                    <SET_STATE_EXTERNAL>(&gt;O:XMLVAR_ELECTRICAL_Crash_Lever_Down) p0 if{ (&gt;B:ELECTRICAL_Battery_1_Off) (&gt;B:ELECTRICAL_Alternator_1_Off) }</SET_STATE_EXTERNAL>
                    <GET_STATE_EXTERNAL>(O:XMLVAR_ELECTRICAL_Crash_Lever_Down) sp0</GET_STATE_EXTERNAL>
                    <STR_STATE_OFF>Up</STR_STATE_OFF>
                    <STR_STATE_ON>Down</STR_STATE_ON>
                    <TT_VALUE_OFF>(R:1:@TT_Package.GT_STATE_UP)</TT_VALUE_OFF>
                    <TT_VALUE_ON>(R:1:@TT_Package.GT_STATE_DOWN)</TT_VALUE_ON>
                    <SIM_STATE_IS_ON_EXTERNAL>l0</SIM_STATE_IS_ON_EXTERNAL>
                    <TT_DESCRIPTION_ID>@TT_Package.ELECTRICAL_LEVER_GENERATORRESET_ACTION</TT_DESCRIPTION_ID>
                    <TT_ICON>MOVE_AXIS_Y</TT_ICON>
                    <TT_INTERACTION>PRIMARY_DOWN+Y_AXIS</TT_INTERACTION>
                    <TT_INTERACTION_LOCKABLE>Y_AXIS</TT_INTERACTION_LOCKABLE>
                    <ANIM>EXTERNAL</ANIM>
                </UseInputEvent>
                <UseTemplate Name="ASOBO_GT_Lever_DraggingYAxis_Code">
                    <TOOLTIP_TITLE>@TT_Package.ELECTRICAL_LEVER_GENERATORRESET_TITLE</TOOLTIP_TITLE>
                    <TOOLTIP_ENTRY_0>ELECTRICAL_Crash_Lever</TOOLTIP_ENTRY_0>
                    <PART_ID>ELECTRICAL_Lever_GeneratorReset</PART_ID>
                    <ANIM_NAME>electricpower_lever_generatorreset</ANIM_NAME>
                    <SINGLE_STEP/>
                    <UP_CODE>(&gt;B:ELECTRICAL_Crash_Lever_Up)</UP_CODE>
                    <DOWN_CODE>(&gt;B:ELECTRICAL_Crash_Lever_Down)</DOWN_CODE>
                    <ANIM_CODE>(B:ELECTRICAL_Crash_Lever, Bool) 100 *</ANIM_CODE>
                    <WWISE_EVENT_1>electricpower_generatorreset_lever_on</WWISE_EVENT_1>
                    <WWISE_EVENT_2>electricpower_generatorreset_lever_off</WWISE_EVENT_2>
                </UseTemplate>
            </Component>
            <Component ID="ELECTRICAL_Push_Main" Node="ElectricPower_Push_Main">
                <UseInputEvent ID="ELECTRICAL">
                    <BTN_ID>Main_Button</BTN_ID>
                    <TT_DESCRIPTION_ID>@TT_Package.ELECTRICAL_PUSH_MAIN_ACTION</TT_DESCRIPTION_ID>
                    <SET_STATE_EXTERNAL>(&gt;O:XMLVAR_Main_Button)</SET_STATE_EXTERNAL>
                    <BINDING_INC_0>Push</BINDING_INC_0>
                    <BINDING_INC_0_PARAM_0>1</BINDING_INC_0_PARAM_0>
                </UseInputEvent>
                <UseTemplate Name="ASOBO_GT_Push_Button">
                    <TOOLTIP_TITLE>@TT_Package.ELECTRICAL_PUSH_MAIN_TITLE</TOOLTIP_TITLE>
                    <TOOLTIP_ENTRY_0>ELECTRICAL_Main_Button</TOOLTIP_ENTRY_0>
                    <PART_ID>ELECTRICAL_Push_Main</PART_ID>
                    <ANIM_NAME>ElectricPower_Push_Main</ANIM_NAME>
                    <LEFT_SINGLE_CODE>(&gt;B:ELECTRICAL_Main_Button_Push)</LEFT_SINGLE_CODE>
                    <WWISE_EVENT_1>electricpower_main_push_button_on</WWISE_EVENT_1>
                    <NORMALIZED_TIME_1>0.1</NORMALIZED_TIME_1>
                    <WWISE_EVENT_2>electricpower_main_push_button_off</WWISE_EVENT_2>
                    <NORMALIZED_TIME_2>0.5</NORMALIZED_TIME_2>
                </UseTemplate>
            </Component>
            <Component ID="ELECTRICAL_Push_Standby" Node="ElectricPower_Push_Stby">
                <UseInputEvent ID="ELECTRICAL">
                    <BTN_ID>Standby_Button</BTN_ID>
                    <TT_DESCRIPTION_ID>@TT_Package.ELECTRICAL_PUSH_STDBY_ACTION</TT_DESCRIPTION_ID>
                    <SET_STATE_EXTERNAL>(&gt;O:XMLVAR_Standby_Button)</SET_STATE_EXTERNAL>
                    <BINDING_INC_0>Push</BINDING_INC_0>
                    <BINDING_INC_0_PARAM_0>1</BINDING_INC_0_PARAM_0>
                </UseInputEvent>
                <UseTemplate Name="ASOBO_GT_Push_Button">
                    <TOOLTIP_TITLE>@TT_Package.ELECTRICAL_PUSH_STDBY_TITLE</TOOLTIP_TITLE>
                    <TOOLTIP_ENTRY_0>ELECTRICAL_Standby_Button</TOOLTIP_ENTRY_0>
                    <PART_ID>ELECTRICAL_Push_Stby</PART_ID>
                    <ANIM_NAME>ElectricPower_Push_Stby</ANIM_NAME>
                    <LEFT_SINGLE_CODE>(&gt;B:ELECTRICAL_Standby_Button_Push)</LEFT_SINGLE_CODE>
                    <WWISE_EVENT_1>electricpower_stby_push_button_on</WWISE_EVENT_1>
                    <NORMALIZED_TIME_1>0.1</NORMALIZED_TIME_1>
                    <WWISE_EVENT_2>electricpower_stby_push_button_off</WWISE_EVENT_2>
                    <NORMALIZED_TIME_2>0.5</NORMALIZED_TIME_2>
                </UseTemplate>
            </Component>
            <CameraTitle>Overhead</CameraTitle>
        </Component>

        <!-- AUTOPILOT ################################## -->
        <Component ID="AUTOPILOT">
            <DefaultTemplateParameters>
                <DONT_APPEND_ID>True</DONT_APPEND_ID>
                <EMISSIVE_CODE>(A:LIGHT POTENTIOMETER:4, Percent over 100) @LightDimmingScale *</EMISSIVE_CODE>
            </DefaultTemplateParameters>

            <!-- BARO - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
            <UseTemplate Name="ASOBO_AUTOPILOT_Knob_Baro_Template">
                <NODE_ID>KNOB_BARO_STD_1</NODE_ID>
                <ANIM_NAME_KNOB>KNOB_BARO_STD_1</ANIM_NAME_KNOB>
                <ANIM_NAME_PUSH>KNOB_BARO_STD_1_PUSH</ANIM_NAME_PUSH>
                <ID>1</ID>
                <PUSH/>
            </UseTemplate>

            <UseTemplate Name="ASOBO_AUTOPILOT_Knob_Baro_Template">
                <NODE_ID>KNOB_BARO_STD_2</NODE_ID>
                <ANIM_NAME_KNOB>KNOB_BARO_STD_2</ANIM_NAME_KNOB>
                <ANIM_NAME_PUSH>KNOB_BARO_STD_2_PUSH</ANIM_NAME_PUSH>
                <ID>2</ID>
                <PUSH/>
                <BARO_ID>1</BARO_ID>
            </UseTemplate>

            <UseTemplate Name="ASOBO_AUTOPILOT_Knob_Baro_Template">
                <NODE_ID>knob_STBY_panel</NODE_ID>
                <ANIM_NAME>KNOB_stby_panel</ANIM_NAME>
                <ID>3</ID>
                <BARO_ID>2</BARO_ID>
                <THRESHOLD_MOUSE>0.01</THRESHOLD_MOUSE>
            </UseTemplate>

            <!-- ENGAGE/DISENGAGE - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
            <UseTemplate Name="ASOBO_AUTOPILOT_Push_Autopilot_Template">
                <ANIM_NAME>PUSH_AUTOPILOT_AP</ANIM_NAME>
                <NODE_ID>push_autopilot_ap</NODE_ID>
                <ON_AP_MASTER_SWITCH>YD_ON</ON_AP_MASTER_SWITCH>
                <AP_MASTER_ON_CHECK>(B:HANDLING_AP_Trim) 0 == (A:AUTOPILOT MASTER, bool) and</AP_MASTER_ON_CHECK>
            </UseTemplate>

            <!-- HEADING - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
            <UseTemplate Name="ASOBO_AUTOPILOT_Push_Heading_Template">
                <ANIM_NAME>push_autopilot_hdg</ANIM_NAME>
                <NODE_ID>push_autopilot_hdg</NODE_ID>
            </UseTemplate>

            <UseTemplate Name="ASOBO_AUTOPILOT_Knob_Heading_Template">
                <ANIM_NAME_KNOB>knob_autopilot_hdg</ANIM_NAME_KNOB>
                <ANIM_NAME_PUSH>knob_autopilot_hdg_push</ANIM_NAME_PUSH>
                <NODE_ID>knob_autopilot_hdg</NODE_ID>
                <PUSH/>
            </UseTemplate>

            <!-- BANK - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
            <!--
                TBM Automatically switches to low bank angle when above 25k ft
                And back to high bank angle when below 25ft
            -->
            <UseTemplate Name="ASOBO_AUTOPILOT_Push_Bank_Template">
                <ANIM_NAME>push_autopilot_bank</ANIM_NAME>
                <NODE_ID>push_autopilot_bank</NODE_ID>
                <VAR_NAME>XMLVAR_LTS_Test</VAR_NAME>
                <TYPE>HALF_BANK</TYPE>
                <ACTIVE_ABOVE_ALT_FT>25000</ACTIVE_ABOVE_ALT_FT>
            </UseTemplate>

            <!-- APPROACH - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
            <UseTemplate Name="ASOBO_AUTOPILOT_Push_Approach_Template">
                <ANIM_NAME>push_autopilot_apr</ANIM_NAME>
                <NODE_ID>push_autopilot_apr</NODE_ID>
            </UseTemplate>

            <!-- BACKCOURSE - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
            <UseTemplate Name="ASOBO_AUTOPILOT_Push_BackCourse_Template">
                <ANIM_NAME>push_autopilot_bc</ANIM_NAME>
                <NODE_ID>push_autopilot_bc</NODE_ID>
            </UseTemplate>

            <!-- FLIGHT DIRECTOR - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
            <UseTemplate Name="ASOBO_AUTOPILOT_Push_FlightDirector_Template">
                <ANIM_NAME>push_autopilot_fd</ANIM_NAME>
                <NODE_ID>push_autopilot_fd</NODE_ID>
            </UseTemplate>

            <!-- YAW DAMPER - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
            <UseTemplate Name="ASOBO_AUTOPILOT_Push_YawDamper_Template">
                <ANIM_NAME>push_autopilot_yd</ANIM_NAME>
                <NODE_ID>push_autopilot_yd</NODE_ID>
            </UseTemplate>

            <!-- ALTITUDE - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
            <UseTemplate Name="ASOBO_AUTOPILOT_Push_Altitude_Template">
                <ANIM_NAME>push_autopilot_alt</ANIM_NAME>
                <NODE_ID>push_autopilot_alt</NODE_ID>
            </UseTemplate>

            <UseTemplate Name="ASOBO_AUTOPILOT_Knob_Altitude_Template">
                <ANIM_NAME>knob_autopilot_altsel</ANIM_NAME>
                <NODE_ID>knob_autopilot_altsel</NODE_ID>
                <INCREMENT>100</INCREMENT>
            </UseTemplate>

            <!-- FLIGHT LEVEL CHANGE - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
            <UseTemplate Name="ASOBO_AUTOPILOT_Push_FlightLevelChange_Template">
                <ANIM_NAME>push_autopilot_flc</ANIM_NAME>
                <NODE_ID>push_autopilot_flc</NODE_ID>
            </UseTemplate>

            <!-- VERTICAL SPEED - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
            <UseTemplate Name="ASOBO_AUTOPILOT_Push_VerticalSpeed_Template">
                <ANIM_NAME>push_autopilot_vs</ANIM_NAME>
                <NODE_ID>push_autopilot_vs</NODE_ID>
            </UseTemplate>
            <UseTemplate Name="ASOBO_AUTOPILOT_Knob_VerticalSpeed_Template">
                <HITBOX_UP_NODE_ID>hitbox_wheel_autopilot_vs_DN</HITBOX_UP_NODE_ID>
                <HITBOX_DOWN_NODE_ID>hitbox_wheel_autopilot_vs_UP</HITBOX_DOWN_NODE_ID>
                <ANIM_NAME>wheel_autopilot_vs</ANIM_NAME>
                <NODE_ID>wheel_autopilot_vs</NODE_ID>
                <UP_DEC_DN_INC>True</UP_DEC_DN_INC>
                <SET_AIRSPEED_ON_FLC>True</SET_AIRSPEED_ON_FLC>
            </UseTemplate>

            <!-- NAV - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
            <UseTemplate Name="ASOBO_AUTOPILOT_Push_Navigation_Template">
                <ANIM_NAME>push_autopilot_nav</ANIM_NAME>
                <NODE_ID>push_autopilot_nav</NODE_ID>
            </UseTemplate>

            <!-- VNAV - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
            <UseTemplate Name="ASOBO_AUTOPILOT_Push_Vertical_Navigation_Template">
                <ANIM_NAME>push_autopilot_vnv</ANIM_NAME>
                <NODE_ID>push_autopilot_vnv</NODE_ID>
            </UseTemplate>

            <!-- SPEED - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
            <UseTemplate Name="ASOBO_AUTOPILOT_Push_SpeedToggle_Template">
                <ANIM_NAME>push_autopilot_spd</ANIM_NAME>
                <NODE_ID>push_autopilot_spd</NODE_ID>
            </UseTemplate>

            <!-- Wing Leveler - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
            <UseTemplate Name="ASOBO_AUTOPILOT_Push_Level_Template">
                <ANIM_NAME>push_autopilot_LVL</ANIM_NAME>
                <NODE_ID>push_autopilot_LVL</NODE_ID>
                <ACTIVE_NODE_ID>push_autopilot_LVL_Text</ACTIVE_NODE_ID>
                <NO_TEXT_EMISSIVE>True</NO_TEXT_EMISSIVE>
            </UseTemplate>

            <!-- AP Transfer - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
            <UseTemplate Name="ASOBO_AUTOPILOT_Push_Transfer_Template">
                <NODE_ID>push_autopilot_XFR</NODE_ID>
                <ANIM_NAME>push_autopilot_XFR</ANIM_NAME>
            </UseTemplate>

            <UseTemplate Name="ASOBO_AUTOPILOT_Push_Transfer_Light_Template">
                <NODE_ID>push_XFR_light_l</NODE_ID>
                <EMISSIVE_CODE>(L:XMLVAR_PushXFR) !</EMISSIVE_CODE>
                <!-- <LIGHT_ID>l</LIGHT_ID> uncomment when the NODE_ID has been updated to AUTOPILOT_Push_Transfer_Light_ -->
            </UseTemplate>

            <UseTemplate Name="ASOBO_AUTOPILOT_Push_Transfer_Light_Template">
                <NODE_ID>push_XFR_light_r</NODE_ID>
                <EMISSIVE_CODE>(L:XMLVAR_PushXFR)</EMISSIVE_CODE>
                <!-- <LIGHT_ID>r</LIGHT_ID> uncomment when the NODE_ID has been updated to AUTOPILOT_Push_Transfer_Light_ -->
            </UseTemplate>

            <!-- COURSE - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

            <UseTemplate Name="ASOBO_AUTOPILOT_Knob_Course_Template">
                <ID>1</ID>
                <NODE_ID>knob_autopilot_CRS1</NODE_ID>
                <ANIM_NAME>knob_autopilot_CRS1</ANIM_NAME>
                <ANIM_NAME_PUSH>knob_autopilot_CRS1_push</ANIM_NAME_PUSH>
                <PUSH/>
            </UseTemplate>

            <UseTemplate Name="ASOBO_AUTOPILOT_Knob_Course_Template">
                <ID>2</ID>
                <NODE_ID>knob_autopilot_CRS2</NODE_ID>
                <ANIM_NAME>knob_autopilot_CRS2</ANIM_NAME>
                <ANIM_NAME_PUSH>knob_autopilot_CRS2_push</ANIM_NAME_PUSH>
                <PUSH/>
            </UseTemplate>

            <CameraTitle>AutoPilot</CameraTitle>
        </Component>

        <!-- DEICE_SYSTEM ############################### -->
        <Component ID="DEICE_SYSTEM">
            <UseTemplate Name="ASOBO_DEICE_Switch_Airframe_Template">
                <ANIM_NAME>DEICESYSTEM_SWITCH_AIRFRAME</ANIM_NAME>
                <ANIM_EVENT_EFFECT_NAME>CAM_DEICESYSTEM_SWITCH_AIRFRAME</ANIM_EVENT_EFFECT_NAME>
                <NODE_ID>DEICESYSTEM_SWITCH_AIRFRAME</NODE_ID>
                <NORMALIZED_TIME>0.1</NORMALIZED_TIME>
            </UseTemplate>

            <UseTemplate Name="ASOBO_DEICE_Switch_Propeller_Template">
                <ANIM_NAME>DEICESYSTEM_SWITCH_PROP</ANIM_NAME>
                <NODE_ID>DEICESYSTEM_SWITCH_PROP</NODE_ID>
            </UseTemplate>

            <UseTemplate Name="ASOBO_DEICE_Switch_Windshield_Template">
                <ANIM_NAME>DEICESYSTEM_SWITCH_WINDSHIELD</ANIM_NAME>
                <NODE_ID>DEICESYSTEM_SWITCH_WINDSHIELD</NODE_ID>
                <VAR_SCOPE>L</VAR_SCOPE>
            </UseTemplate>

            <!-- Only one pitot in FSX but pitot should have indexes -->
            <UseTemplate Name="ASOBO_DEICE_Switch_Pitot_Template">
                <NUM_PITOTS>2</NUM_PITOTS>
                <NODE_ID_LEFT_PITOT>DEICESYSTEM_SWITCH_PITOT_L</NODE_ID_LEFT_PITOT>
                <NODE_ID_RIGHT_PITOT>DEICESYSTEM_SWITCH_PITOT_R</NODE_ID_RIGHT_PITOT>
                <ANIM_NAME_LEFT_PITOT>DEICESYSTEM_SWITCH_PITOT_L</ANIM_NAME_LEFT_PITOT>
                <ANIM_NAME_RIGHT_PITOT>DEICESYSTEM_SWITCH_PITOT_R</ANIM_NAME_RIGHT_PITOT>
            </UseTemplate>
            <UseTemplate Name="ASOBO_DEICE_Switch_InertSep_Template">
                <NODE_ID>deicesystem_switch_inertsep</NODE_ID>
                <ANIM_NAME>deicesystem_switch_inertsep</ANIM_NAME>
            </UseTemplate>
            <!-- DEICE Lights -->
            <!--
                This update is used to create a pattern in the lights of the DeIce Airframe left and right wings :
                1. 1 sec nothing
                2. 2 sec Left Light
                3. 1 sec nothing
                4. 2 sec Right Light
                5. Back to step 1
            -->
            <Update Frequency="1">
                (A:STRUCTURAL DEICE SWITCH, Bool) if{
                    (I:XMLVAR_DeiceAirframeOperationStep) ++ 67 % (&gt;I:XMLVAR_DeiceAirframeOperationStep)
                    (I:XMLVAR_DeiceAirframeOperationStep) 0 &gt;=
                    (I:XMLVAR_DeiceAirframeOperationStep) 2 &lt;= and if{
                        1 (&gt;L:XMLVAR_IsDeiceAirFrame)
                        0 (&gt;L:XMLVAR_IsDeiceAirFrame2)
                    } els{
                        0 (&gt;L:XMLVAR_IsDeiceAirFrame)
                        (I:XMLVAR_DeiceAirframeOperationStep) 5 &gt;
                        (I:XMLVAR_DeiceAirframeOperationStep) 7 &lt;= and if{
                            1 (&gt;L:XMLVAR_IsDeiceAirFrame2)
                        } els{
                            0 (&gt;L:XMLVAR_IsDeiceAirFrame2)
                        }
                    }
                } els{
                    0 (&gt;I:XMLVAR_DeiceAirframeOperationStep)
                    0 (&gt;L:XMLVAR_IsDeiceAirFrame)
                    0 (&gt;L:XMLVAR_IsDeiceAirFrame2)
                }
            </Update>
            <UseTemplate Name="ASOBO_DEICE_Switch_Light_Template">
                <ID>1</ID>
                <NODE_ID>DEICESYSTEM_SWITCH_AIRFRAME_light01</NODE_ID>
                <TARGET_ID>Airframe</TARGET_ID>
                <EMISSIVE_CODE>
                    (L:XMLVAR_IsDeiceAirFrame)
                </EMISSIVE_CODE>
            </UseTemplate>
            <UseTemplate Name="ASOBO_DEICE_Switch_Light_Template">
                <ID>2</ID>
                <NODE_ID>DEICESYSTEM_SWITCH_AIRFRAME_light02</NODE_ID>
                <TARGET_ID>Airframe</TARGET_ID>
                <EMISSIVE_CODE>
                    (L:XMLVAR_IsDeiceAirframe2)
                </EMISSIVE_CODE>
            </UseTemplate>
            <UseTemplate Name="ASOBO_DEICE_Switch_Light_Template">
                <ID>1</ID>
                <NODE_ID>DEICESYSTEM_SWITCH_WINDSHIELD_light01</NODE_ID>
                <TARGET_ID>Windshield</TARGET_ID>
                <EMISSIVE_CODE>
                    (A:WINDSHIELD DEICE SWITCH, Bool)
                </EMISSIVE_CODE>
            </UseTemplate>
            <UseTemplate Name="ASOBO_DEICE_Switch_Light_Template">
                <ID>2</ID>
                <NODE_ID>DEICESYSTEM_SWITCH_WINDSHIELD_light02</NODE_ID>
                <TARGET_ID>Windshield</TARGET_ID>
                <EMISSIVE_CODE>
                    (A:WINDSHIELD DEICE SWITCH, Bool)
                </EMISSIVE_CODE>
            </UseTemplate>
            <UseTemplate Name="ASOBO_DEICE_Switch_Light_Template">
                <NODE_ID>DEICESYSTEM_SWITCH_PROP_light</NODE_ID>
                <TARGET_ID>Propeller</TARGET_ID>
                <EMISSIVE_CODE>
                    (A:PROP DEICE SWITCH:1, Bool)
                </EMISSIVE_CODE>
            </UseTemplate>
            <!-- ######### -->

            <!-- Is actually a switch for the light of the circuit breakers -->
            <UseTemplate Name="ASOBO_LIGHTING_Toggle_Var_Template">
                <IE_VAR_ID>CB_light</IE_VAR_ID>
                <NODE_ID>SWITCH_LIGHT_CABIN</NODE_ID>
                <ANIM_NAME>SWITCH_LIGHT_CABIN</ANIM_NAME>
                <TT_DESCRIPTION_ID>@TT_Package.LIGHTING_SWITCH_CB_LIGHT_ACTION</TT_DESCRIPTION_ID>
                <TOOLTIP_TITLE>@TT_Package.LIGHTING_SWITCH_CB_LIGHT_TITLE</TOOLTIP_TITLE>
                <WWISE_EVENT_1>light_cabin_switch_on</WWISE_EVENT_1>
                <WWISE_EVENT_2>light_cabin_switch_off</WWISE_EVENT_2>
            </UseTemplate>
            <UseTemplate Name="ASOBO_GT_Component_Emissive_Gauge">
                <NODE_ID>LIGHTING_Panel_Emissive</NODE_ID>
                <EMISSIVE_CODE>(B:LIGHTING_CB_Light, Bool)</EMISSIVE_CODE>
            </UseTemplate>
            <CameraTitle>PFD</CameraTitle>
        </Component>

        <!-- AS3000 ######################################-->
        <Component ID="AS3000">
            <UseInputEvent ID="MODEL_BEHAVIOR">
                <IE_NAME>Prevent_Avionics_Off</IE_NAME>
                <SIMVAR_TO_WATCH_0>AVIONICS MASTER SWITCH</SIMVAR_TO_WATCH_0>
                <INIT_CODE>(A:AVIONICS MASTER SWITCH, Bool) ! if{ 1 (&gt;K:AVIONICS_MASTER_SET) }</INIT_CODE>
            </UseInputEvent>
            <Component ID="AS3000_MFD">
                <UseTemplate Name="ASOBO_AS3000_MFD">
                    <DONT_APPEND_ID>True</DONT_APPEND_ID>
                    <SCREEN_NODE_ID>AS_MFD</SCREEN_NODE_ID>
                </UseTemplate>
                <CameraTitle>MFD</CameraTitle>
                <Component ID="WT_AS3000_MFD_Screen" Node="WT_MFD">
                    <UseTemplate Name="ASOBO_GT_Visibility_Code">
                        <VISIBILITY_CODE>0</VISIBILITY_CODE>
                    </UseTemplate>
                </Component>
            </Component>
            <Component ID="AS3000_PFD">
                <Parameters Type="Default">
                    <DONT_APPEND_ID>True</DONT_APPEND_ID>
                </Parameters>
                <UseTemplate Name="ASOBO_AS3000_PFD">
                    <ID>1</ID>
                    <SCREEN_NODE_ID>AS_PFD_L</SCREEN_NODE_ID>
                </UseTemplate>
                <Component ID="WT_AS3000_PFD_Screen_L" Node="WT_PFD_L">
                    <UseTemplate Name="ASOBO_GT_Visibility_Code">
                        <VISIBILITY_CODE>0</VISIBILITY_CODE>
                    </UseTemplate>
                </Component>
                <UseTemplate Name="ASOBO_AS3000_PFD">
                    <ID>2</ID>
                    <SCREEN_NODE_ID>AS_PFD_R</SCREEN_NODE_ID>
                </UseTemplate>
                <Component ID="WT_AS3000_PFD_Screen_R" Node="WT_PFD_R">
                    <UseTemplate Name="ASOBO_GT_Visibility_Code">
                        <VISIBILITY_CODE>0</VISIBILITY_CODE>
                    </UseTemplate>
                </Component>
                <CameraTitle>PFD</CameraTitle>
            </Component>
        </Component>

        <!-- AS580 #####################################-->
        <Component ID="AS580">
            <DefaultTemplateParameters>
                <DONT_APPEND_ID>True</DONT_APPEND_ID>
                <TYPE>VARIANT</TYPE>
            </DefaultTemplateParameters>
            <UseTemplate Name="ASOBO_AS580_Template">
                <DISPLAY_POS>L</DISPLAY_POS>
                <FRAME_NODE_ID>AS580_text</FRAME_NODE_ID>
                <SCREEN_NODE_ID>AS_TSC_L</SCREEN_NODE_ID>
                <ID>1</ID>
            </UseTemplate>
            <Component ID="WT_AS3000_TSC_Screen_L" Node="WT_TSC_L">
                <UseTemplate Name="ASOBO_GT_Visibility_Code">
                    <VISIBILITY_CODE>0</VISIBILITY_CODE>
                </UseTemplate>
            </Component>
            <UseTemplate Name="ASOBO_AS580_Template">
                <DISPLAY_POS>R</DISPLAY_POS>
                <SCREEN_NODE_ID>AS_TSC_R</SCREEN_NODE_ID>
                <ID>2</ID>
            </UseTemplate>
            <Component ID="WT_AS3000_TSC_Screen_R" Node="WT_TSC_R">
                <UseTemplate Name="ASOBO_GT_Visibility_Code">
                    <VISIBILITY_CODE>0</VISIBILITY_CODE>
                </UseTemplate>
            </Component>
            <CameraTitle>MFD</CameraTitle>
        </Component>

        <!-- GLASS_COCKPIT ##############################-->
        <Component ID="GLASS_COCKPIT">
            <Component ID="GLASS_COCKPIT_Screen_Attitude_Text" Node="AttitudeDisplay">
                <UseTemplate Name="ASOBO_GT_Emissive_Gauge">
                    <EMISSIVE_CODE>0.5</EMISSIVE_CODE>
                </UseTemplate>
            </Component>

            <Component ID="GLASS_COCKPIT_Screen_Speed_Text" Node="SpeedDisplay">
                <UseTemplate Name="ASOBO_GT_Emissive_Gauge">
                    <EMISSIVE_CODE>0.5</EMISSIVE_CODE>
                </UseTemplate>
            </Component>
        </Component>

        <!-- SAFETY #####################################-->
        <Component ID="SAFETY">
            <UseTemplate Name="ASOBO_SAFETY_Push_Warning_Template">
                <VAR_SCOPE>L</VAR_SCOPE>
                <VAR_NAME>XMLVAR_LTS_Test</VAR_NAME>
                <NODE_ID>Master_warning_push</NODE_ID>
                <ANIM_NAME>master_push_warning</ANIM_NAME>
            </UseTemplate>
            <UseTemplate Name="ASOBO_SAFETY_Push_Caution_Template">
                <VAR_SCOPE>L</VAR_SCOPE>
                <VAR_NAME>XMLVAR_LTS_Test</VAR_NAME>
                <NODE_ID>Master_caution_push</NODE_ID>
                <ANIM_NAME>master_push_caution</ANIM_NAME>
            </UseTemplate>
            <UseTemplate Name="ASOBO_SAFETY_Push_Test_Template">
                <NODE_ID>DEICESYSTEM_LTS_TEST</NODE_ID>
                <ANIM_NAME>DEICESYSTEM_LTS_TEST</ANIM_NAME>
            </UseTemplate>
            <CameraTitle>PFD</CameraTitle>
        </Component>

        <Component ID="PASSENGER">
            <UseTemplate Name="ASOBO_PASSENGER_Switch_Cabin_Air_Template">
                <NUM_STATES>3</NUM_STATES>
                <PART_ID>AC_SWITCH_CTRL</PART_ID>
                <ANIM_NAME>AC_SWITCH_CTRL</ANIM_NAME>
                <NODE_ID>AC_SWITCH_CTRL</NODE_ID>
                <WWISE_EVENT>ac_ctrl_switch</WWISE_EVENT>
                <TT_VALUE_0>@TT_Package.GT_STATE_PILOT</TT_VALUE_0>
                <TT_VALUE_1>'PLT PAX'</TT_VALUE_1>
                <TT_VALUE_1_IS_DYNAMIC>True</TT_VALUE_1_IS_DYNAMIC>
                <TT_VALUE_2>@TT_Package.GT_STATE_OFF</TT_VALUE_2>
                <STR_STATE_0>Pilot</STR_STATE_0>
                <STR_STATE_1>Plt_Pax</STR_STATE_1>
                <STR_STATE_2>Off</STR_STATE_2>
                <ID>1</ID>
            </UseTemplate>
            <UseTemplate Name="ASOBO_PASSENGER_Knob_Cabin_Air_Template">
                <NODE_ID>AC_KNOB_FAN</NODE_ID>
                <ANIM_NAME>AC_KNOB_FAN</ANIM_NAME>
                <WWISE_EVENT>AC_knob_fan</WWISE_EVENT>
                <ID>2</ID>
                <KNOB_SPEED>25</KNOB_SPEED>
                <ANIM_LAG>200</ANIM_LAG>
                <COUNT>4</COUNT>
                <THRESHOLD_INPUT>0.001</THRESHOLD_INPUT>
                <THRESHOLD_MOUSE>0.03</THRESHOLD_MOUSE>
            </UseTemplate>
            <UseTemplate Name="ASOBO_PASSENGER_Knob_Cabin_Heat_Template">
                <NODE_ID>AC_KNOB_TEMP</NODE_ID>
                <ANIM_NAME>AC_KNOB_TEMP</ANIM_NAME>
                <WWISE_EVENT>AC_knob_temp</WWISE_EVENT>
                <ID>1</ID>
                <INIT_VALUE>50</INIT_VALUE>
            </UseTemplate>
            <UseTemplate Name="ASOBO_PASSENGER_Knob_Cabin_Heat_Template">
                <NODE_ID>HOTAIRFLOW_KNOB</NODE_ID>
                <ANIM_NAME>HOTAIRFLOW_KNOB</ANIM_NAME>
                <WWISE_EVENT>hotairflow_knob</WWISE_EVENT>
                <ID>2</ID>
                <INIT_VALUE>50</INIT_VALUE>
            </UseTemplate>
        </Component>

        <Component ID="Copilot_Controls">
            <UseTemplate Name="ASOBO_SAFETY_Switch_AlternateStaticAir_Template">
                <NODE_ID>PARKBRAKE_KNOB_R</NODE_ID>
                <ANIM_NAME>PARKBRAKE_KNOB_R</ANIM_NAME>
            </UseTemplate>
            <Component ID="RAM_AIR" Node="EMERGENCY_PUSH_RAMAIR">
                <UseInputEvent ID="PRESSURIZATION">
                    <BTN_ID>RAM_AIR</BTN_ID>
                    <TT_ICON>MOVE_AXIS_Y</TT_ICON>
                    <SET_STATE_EXTERNAL>p0 (&gt;O:XMLVAR_RAM_AIR_OPEN)</SET_STATE_EXTERNAL>
                    <GET_STATE_EXTERNAL>(O:XMLVAR_RAM_AIR_OPEN) sp0</GET_STATE_EXTERNAL>
                    <SIM_STATE_IS_ON_EXTERNAL>l0</SIM_STATE_IS_ON_EXTERNAL>
                    <TT_DESCRIPTION_ID>@TT_Package.CABIN_EMERGENCY_PUSH_RAMAIR_ACTION</TT_DESCRIPTION_ID>
                    <STR_STATE_ON>Open</STR_STATE_ON>
                    <STR_STATE_OFF>Close</STR_STATE_OFF>
                    <TT_VALUE_ON>(R:1:@TT_Package.GT_STATE_OPEN)</TT_VALUE_ON>
                    <TT_VALUE_OFF>(R:1:@TT_Package.GT_STATE_CLOSED)</TT_VALUE_OFF>
                </UseInputEvent>
                <UseTemplate Name="ASOBO_GT_Switch_Code">
                    <TOOLTIP_TITLE>@TT_Package.CABIN_EMERGENCY_PUSH_RAMAIR_TITLE</TOOLTIP_TITLE>
                    <TOOLTIP_ENTRY_0>PRESSURIZATION_RAM_AIR</TOOLTIP_ENTRY_0>
                    <ANIM_NAME>EMERGENCY_PUSH_RAMAIR</ANIM_NAME>
                    <ANIM_CODE>(B:PRESSURIZATION_RAM_AIR, Bool) 100 *</ANIM_CODE>
                    <LEFT_SINGLE_CODE>(&gt;B:PRESSURIZATION_RAM_AIR_Toggle)</LEFT_SINGLE_CODE>
                </UseTemplate>
            </Component>
        </Component>

        <Component ID="TT_INOP">
            <UseTemplate Name="ASOBO_GT_Interaction_Tooltip">
                <NODE_ID>switch_ceiling_testLight</NODE_ID>
            </UseTemplate>
            <UseTemplate Name="ASOBO_GT_Interaction_Tooltip">
                <NODE_ID>push_ceiling_testLight</NODE_ID>
            </UseTemplate>
        </Component>

        <Component ID="SUN_VISOR">
            <UseTemplate Name="ASOBO_GT_Update">
                <UPDATE_ONCE>True</UPDATE_ONCE>
                <UPDATE_CODE>
                    100 (&gt;L:XMLVAR_SunVisorX_1)
                    100 (&gt;L:XMLVAR_SunVisorY_1)
                    100 (&gt;L:XMLVAR_SunVisorY_2)
                </UPDATE_CODE>
            </UseTemplate>
            <Component ID="SUN_VISOR_PILOT_part01" Node="SUN_VISOR_PILOT_part01">
                <UseTemplate Name="TBM930_DragXAxis_Code">
                    <ANIM_NAME>SUN_VISOR_PILOT_part01</ANIM_NAME>
                    <ID>1</ID>
                    <INVERT_ANIM>True</INVERT_ANIM>
                    <UP_CODE/>
                    <DOWN_CODE/>
                    <TOOLTIPID>Sun Visor Left/Right</TOOLTIPID>
                </UseTemplate>
            </Component>
            <Component ID="SUN_VISOR_PILOT_part02" Node="SUN_VISOR_PILOT_part02">
                <UseTemplate Name="TBM930_DragYAxis_Code">
                    <ANIM_NAME>SUN_VISOR_PILOT_part02</ANIM_NAME>
                    <ID>1</ID>
                    <INVERT_ANIM>True</INVERT_ANIM>
                    <UP_CODE/>
                    <DOWN_CODE/>
                    <TOOLTIPID>Sun Visor Up/Down</TOOLTIPID>
                </UseTemplate>
            </Component>
            <Component ID="SUN_VISOR_COPILOT_part01" Node="SUN_VISOR_COPILOT_part01">
                <UseTemplate Name="TBM930_DragXAxis_Code">
                    <ANIM_NAME>SUN_VISOR_COPILOT_part01</ANIM_NAME>
                    <ID>2</ID>
                    <UP_CODE/>
                    <DOWN_CODE/>
                    <TOOLTIPID>Sun Visor Left/Right</TOOLTIPID>
                </UseTemplate>
            </Component>
            <Component ID="SUN_VISOR_COPILOT_part02" Node="SUN_VISOR_COPILOT_part02">
                <UseTemplate Name="TBM930_DragYAxis_Code">
                    <ANIM_NAME>SUN_VISOR_COPILOT_part02</ANIM_NAME>
                    <ID>2</ID>
                    <INVERT_ANIM>True</INVERT_ANIM>
                    <UP_CODE/>
                    <DOWN_CODE/>
                    <TOOLTIPID>Sun Visor Up/Down</TOOLTIPID>
                </UseTemplate>
            </Component>
        </Component>

        <Component ID="DOORS">
            <DefaultTemplateParameters>
                <DOOR_OPENING_CONDITION>(A:SIM ON GROUND, Bool) (A:AIRSPEED TRUE, Knots) 30 &lt; and</DOOR_OPENING_CONDITION>
                <FD_UNLOCK_STATE>L:XMLVAR_TBM930_FrontDoor_Unlock</FD_UNLOCK_STATE>
                <BD_UNLOCK_STATE>L:XMLVAR_TBM930_BackDoor_Unlock</BD_UNLOCK_STATE>
                <FD_STATE>L:XMLVAR_TBM930_FrontDoor_State</FD_STATE>
                <BD_STATE>L:XMLVAR_TBM930_BackDoor_State</BD_STATE>
                <CD_STATE>L:XMLVAR_TBM930_CargoDoor_State</CD_STATE>
            </DefaultTemplateParameters>
            <UseTemplate Name="ASOBO_GT_Update">
                <UPDATE_ONCE>True</UPDATE_ONCE>
                <UPDATE_CODE>
                    #DOOR_OPENING_CONDITION# (A:ELECTRICAL MASTER BATTERY, Bool) ! if{
                        (L:XMLVAR_TBM930_FrontDoor_Init) if{ 1 (&gt;K:TOGGLE_AIRCRAFT_EXIT_FAST) 1 (&gt;#FD_STATE#) }
                        (L:XMLVAR_TBM930_BackDoor_Init) if{ 2 (&gt;K:TOGGLE_AIRCRAFT_EXIT_FAST) 1 (&gt;#BD_STATE#) }
                        (L:XMLVAR_TBM930_CargoDoor_Init) if{ 3 (&gt;K:TOGGLE_AIRCRAFT_EXIT_FAST) 1 (&gt;#CD_STATE#) }
                    }
                </UPDATE_CODE>
            </UseTemplate>
            <UseTemplate Name="ASOBO_GT_Update">
                <FREQUENCY>1</FREQUENCY>
                <UPDATE_CODE>
                    #DOOR_OPENING_CONDITION# ! if{
                        0 (&gt;#FD_UNLOCK_STATE#)
                        0 (&gt;#BD_UNLOCK_STATE#)
                        (#FD_STATE#) if{ 0 (&gt;#FD_STATE#) 1 (&gt;K:TOGGLE_AIRCRAFT_EXIT_FAST) }
                        (#BD_STATE#) if{ 0 (&gt;#BD_STATE#) 2 (&gt;K:TOGGLE_AIRCRAFT_EXIT_FAST) }
                        (#CD_STATE#) if{ 0 (&gt;#CD_STATE#) 3 (&gt;K:TOGGLE_AIRCRAFT_EXIT_FAST) }
                    }
                </UPDATE_CODE>
            </UseTemplate>
            <UseTemplate Name="ASOBO_GT_Anim_Code">
                <ANIM_NAME>AIRFRAME_Warning_Door_Unlock_Front</ANIM_NAME>
                <ANIM_CODE>(#FD_UNLOCK_STATE#)</ANIM_CODE>
                <ANIM_LENGTH>1</ANIM_LENGTH>
                <INVERT_ANIM>True</INVERT_ANIM>
            </UseTemplate>
            <UseTemplate Name="ASOBO_GT_Anim_Code">
                <ANIM_NAME>AIRFRAME_Warning_Door_Unlock_Rear</ANIM_NAME>
                <ANIM_CODE>(#BD_UNLOCK_STATE#)</ANIM_CODE>
                <ANIM_LENGTH>1</ANIM_LENGTH>
                <INVERT_ANIM>True</INVERT_ANIM>
            </UseTemplate>
            <UseTemplate Name="ASOBO_GT_Anim_Code">
                <ANIM_NAME>door_front</ANIM_NAME>
                <ANIM_CODE>(A:EXIT OPEN:0, Percent)</ANIM_CODE>
                <ANIM_LENGTH>100</ANIM_LENGTH>
            </UseTemplate>
            <UseTemplate Name="ASOBO_GT_Anim_Code">
                <ANIM_NAME>door_rear</ANIM_NAME>
                <ANIM_CODE>(A:EXIT OPEN:1, Percent)</ANIM_CODE>
                <ANIM_LENGTH>100</ANIM_LENGTH>
            </UseTemplate>
            <UseTemplate Name="ASOBO_AIRCRAFT_Lever_Exit_SubTemplate">
                <NODE_ID>push_door_unlock</NODE_ID>
                <ANIM_NAME>push_door_unlock</ANIM_NAME>
                <ANIM_CODE>(#FD_UNLOCK_STATE#) 100 *</ANIM_CODE>
                <ANIM_LENGTH>100</ANIM_LENGTH>
                <LEFT_SINGLE_CODE>(#FD_UNLOCK_STATE#) (#DOOR_OPENING_CONDITION#) ! and ! (&gt;#FD_UNLOCK_STATE#)</LEFT_SINGLE_CODE>
                <ANIMTIP_0>Unlock door</ANIMTIP_0>
                <ANIMTIP_1>Lock door</ANIMTIP_1>
            </UseTemplate>
            <UseTemplate Name="ASOBO_AIRCRAFT_Lever_Exit_SubTemplate">
                <NODE_ID>Rear_Door_Push_Unlock</NODE_ID>
                <ANIM_NAME>Rear_Door_Push_Unlock</ANIM_NAME>
                <ANIM_CODE>(#BD_UNLOCK_STATE#) 100 *</ANIM_CODE>
                <ANIM_LENGTH>100</ANIM_LENGTH>
                <LEFT_SINGLE_CODE>(#BD_UNLOCK_STATE#) (#DOOR_OPENING_CONDITION#) ! and ! (&gt;#BD_UNLOCK_STATE#)</LEFT_SINGLE_CODE>
                <ANIMTIP_0>Unlock door</ANIMTIP_0>
                <ANIMTIP_1>Lock door</ANIMTIP_1>
            </UseTemplate>
            <UseTemplate Name="ASOBO_AIRCRAFT_Lever_Exit_SubTemplate">
                <NODE_ID>FRONT_DOOR_HANDLE</NODE_ID>
                <ANIM_NAME>door_front_handle</ANIM_NAME>
                <ANIM_CODE>(#FD_STATE#) 100 *</ANIM_CODE>
                <ANIM_LENGTH>100</ANIM_LENGTH>
                <ANIM_LAG>100</ANIM_LAG>
                <LEFT_SINGLE_CODE>(#FD_UNLOCK_STATE#) if{ 1 (&gt;K:TOGGLE_AIRCRAFT_EXIT_FAST) (#FD_STATE#) ! (&gt;#FD_STATE#) } els{ (A:EXIT OPEN:0, Bool) if{ 0 (&gt;#FD_STATE#) 1 (&gt;K:TOGGLE_AIRCRAFT_EXIT_FAST) } }</LEFT_SINGLE_CODE>
                <ANIMTIP_0>TT:COCKPIT.TOOLTIPS.DOOR_OPEN</ANIMTIP_0>
                <ANIMTIP_1>TT:COCKPIT.TOOLTIPS.DOOR_CLOSE</ANIMTIP_1>
                <CURSOR>Grab</CURSOR>
            </UseTemplate>
            <UseTemplate Name="ASOBO_AIRCRAFT_Lever_Exit_SubTemplate">
                <NODE_ID>REAR_DOOR_HANDLE</NODE_ID>
                <ANIM_NAME>door_rear_handle</ANIM_NAME>
                <ANIM_CODE>(#BD_STATE#) 100 *</ANIM_CODE>
                <ANIM_LENGTH>100</ANIM_LENGTH>
                <ANIM_LAG>100</ANIM_LAG>
                <LEFT_SINGLE_CODE>(#BD_UNLOCK_STATE#) if{ 2 (&gt;K:TOGGLE_AIRCRAFT_EXIT_FAST) (#BD_STATE#) ! (&gt;#BD_STATE#) } els{ (A:EXIT OPEN:1, Bool) if{ 0 (&gt;#BD_STATE#) 2 (&gt;K:TOGGLE_AIRCRAFT_EXIT_FAST) } }</LEFT_SINGLE_CODE>
                <ANIMTIP_0>TT:COCKPIT.TOOLTIPS.DOOR_OPEN</ANIMTIP_0>
                <ANIMTIP_1>TT:COCKPIT.TOOLTIPS.DOOR_CLOSE</ANIMTIP_1>
                <CURSOR>Grab</CURSOR>
            </UseTemplate>
            <UseTemplate Name="ASOBO_AIRCRAFT_Lever_Exit_SubTemplate">
                <NODE_ID>lever_light_panelBreaker_pilot</NODE_ID>
                <ANIM_NAME>lever_light_panelBreaker_pilot</ANIM_NAME>
                <ANIM_CODE>(#CD_STATE#) 100 *</ANIM_CODE>
                <ANIM_LENGTH>100</ANIM_LENGTH>
                <ANIM_LAG>100</ANIM_LAG>
                <LEFT_SINGLE_CODE>#DOOR_OPENING_CONDITION# if{ 3 (&gt;K:TOGGLE_AIRCRAFT_EXIT_FAST) (#CD_STATE#) ! (&gt;#CD_STATE#) } els{ (A:EXIT OPEN:2, Bool) if{ 0 (&gt;#CD_STATE#) 3 (&gt;K:TOGGLE_AIRCRAFT_EXIT_FAST) } }</LEFT_SINGLE_CODE>
                <ANIMTIP_0>TT:COCKPIT.TOOLTIPS.DOOR_OPEN</ANIMTIP_0>
                <ANIMTIP_1>TT:COCKPIT.TOOLTIPS.DOOR_CLOSE</ANIMTIP_1>
                <CURSOR>Grab</CURSOR>
            </UseTemplate>
            <UseTemplate Name="ASOBO_AIRCRAFT_Lever_Exit_SubTemplate">
                <NODE_ID>lever_light_panelBreaker_copilot</NODE_ID>
                <ANIM_NAME>lever_light_panelBreaker_copilot</ANIM_NAME>
                <ANIM_CODE>(#BD_STATE#) 100 *</ANIM_CODE>
                <ANIM_LENGTH>100</ANIM_LENGTH>
                <ANIM_LAG>100</ANIM_LAG>
                <LEFT_SINGLE_CODE>(#BD_UNLOCK_STATE#) if{ 2 (&gt;K:TOGGLE_AIRCRAFT_EXIT_FAST) (#BD_STATE#) ! (&gt;#BD_STATE#) } els{ (A:EXIT OPEN:1, Bool) if{ 0 (&gt;#BD_STATE#) 2 (&gt;K:TOGGLE_AIRCRAFT_EXIT_FAST) } }</LEFT_SINGLE_CODE>
                <ANIMTIP_0>TT:COCKPIT.TOOLTIPS.DOOR_OPEN</ANIMTIP_0>
                <ANIMTIP_1>TT:COCKPIT.TOOLTIPS.DOOR_CLOSE</ANIMTIP_1>
                <CURSOR>Grab</CURSOR>
                <WWISE_EVENT_1></WWISE_EVENT_1>
                <WWISE_EVENT_2></WWISE_EVENT_2>
            </UseTemplate>
        </Component>

        <Component ID="PASSENGER_TABLE" Node="table_passenger">
            <UseTemplate Name="ASOBO_GT_Switch_Code">
                <ANIM_NAME>table_passenger_01</ANIM_NAME>
                <ANIM_CODE>(L:XMLVAR_TBM930_Table) 100 *</ANIM_CODE>
                <ANIM_LENGTH>100</ANIM_LENGTH>
                <LEFT_SINGLE_CODE>(L:XMLVAR_TBM930_Table) ! (&gt;L:XMLVAR_TBM930_Table)</LEFT_SINGLE_CODE>
                <ANIMTIP_0>Unfold table</ANIMTIP_0>
                <ANIMTIP_1>Fold table</ANIMTIP_1>
                <WWISE_EVENT_1>doorknob_lock</WWISE_EVENT_1>
                <WWISE_EVENT_2>doorknob_unlock</WWISE_EVENT_2>
                <CURSOR>Grab</CURSOR>
            </UseTemplate>
        </Component>

        <Component ID="PILOTS">
            <DefaultTemplateParameters>
                <PILOT_COND>(L:XMLVAR_TBM930_HidePilot) ! (A:PAYLOAD STATION WEIGHT:1, pound) 100 &gt; and (A:CAMERA STATE, Enum) 2 != or</PILOT_COND>
                <COPILOT_COND>(L:XMLVAR_TBM930_HideCoPilot) ! (A:PAYLOAD STATION WEIGHT:2, pound) 100 &gt; and (A:CAMERA STATE, Enum) 2 != or</COPILOT_COND>
            </DefaultTemplateParameters>
            <Component ID="DISPLAYBACKUP_PUSH_L" Node="DISPLAYBACKUP_PUSH_L">
                <UseTemplate Name="ASOBO_GT_Push_Button">
                    <PART_ID>DISPLAYBACKUP_PUSH_L</PART_ID>
                    <ANIM_NAME>DISPLAYBACKUP_PUSH_L</ANIM_NAME>
                    <LEFT_SINGLE_CODE>(L:XMLVAR_TBM930_HidePilot) ! (&gt;L:XMLVAR_TBM930_HidePilot)</LEFT_SINGLE_CODE>
                    <TOOLTIPID>Toggle Pilot</TOOLTIPID>
                </UseTemplate>
            </Component>
            <Component ID="DISPLAYBACKUP_PUSH_R" Node="DISPLAYBACKUP_PUSH_R">
                <UseTemplate Name="ASOBO_GT_Push_Button">
                    <PART_ID>DISPLAYBACKUP_PUSH_R</PART_ID>
                    <ANIM_NAME>DISPLAYBACKUP_PUSH_R</ANIM_NAME>
                    <LEFT_SINGLE_CODE>(L:XMLVAR_TBM930_HideCoPilot) ! (&gt;L:XMLVAR_TBM930_HideCoPilot)</LEFT_SINGLE_CODE>
                    <TOOLTIPID>Toggle CoPilot</TOOLTIPID>
                </UseTemplate>
            </Component>
            <Component ID="PILOT_0" Node="PILOT_0">
                <UseTemplate Name="ASOBO_GT_Visibility_Code">
                    <VISIBILITY_CODE>#PILOT_COND#</VISIBILITY_CODE>
                </UseTemplate>
            </Component>
            <Component ID="PILOT_1" Node="PILOT_1">
                <UseTemplate Name="ASOBO_GT_Visibility_Code">
                    <VISIBILITY_CODE>#COPILOT_COND#</VISIBILITY_CODE>
                </UseTemplate>
            </Component>
            <Component ID="Seatbelt_L" Node="Seatbelt_L">
                <UseTemplate Name="ASOBO_GT_Visibility_Code">
                    <VISIBILITY_CODE>(L:XMLVAR_TBM930_HidePilot) (A:PAYLOAD STATION WEIGHT:1, pound) 100 &lt; or</VISIBILITY_CODE>
                </UseTemplate>
            </Component>
            <Component ID="Seatbelt_R" Node="Seatbelt_R">
                <UseTemplate Name="ASOBO_GT_Visibility_Code">
                    <VISIBILITY_CODE>(L:XMLVAR_TBM930_HideCoPilot) (A:PAYLOAD STATION WEIGHT:2, pound) 100 &lt; or</VISIBILITY_CODE>
                </UseTemplate>
            </Component>
        </Component>
    </Behaviors>
</ModelInfo>